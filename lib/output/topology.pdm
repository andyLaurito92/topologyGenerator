Coupled
          {
              Type = Root
              Name = MyTopology
              Ports = 0; 0
              Description = Testing the creation of a topology by getting the info from the controller
              Graphic
                  {
                      Position = 0; 0
                      Dimension = 600; 600
                      Direction = Right
                      Color = 15
                      Icon = 
                      Window = 5000; 5000; 5000; 5000
                  }
              Parameters
                  {
                  }
              System
                  {
                  Atomic
                      {
                      Name = LoadScilabParams
                      Ports = 1 ; 0
                      Path = sinks/RunScilabJob.h
                      Description = If Scilab is configured as backed in the cmd line options, this model runs Scilab commands at Init, Exit and when receive events.
                      Graphic
                          {
                          Position = -13845 ; -14220 
                          Dimension = 540 ; 540
                          Direction = Right
                          Color = 15
                          Icon = %sinks%scilab.ico
                          }
                      Parameters
                          {
                          Run at Init = Str; exec('/home/alaurito/Desktop/repos/cern/topologyGenerator/lib/output/Scilab/model.scilabParams', 0) ; Scilab Job at Init
                          Run at External = Str;  ; Scilab Job when receive event
                          Run at Exit = Str;  ; Scilab Job at Exit
                          }
                      }
                  Atomic
                      {
                      Name = ExperimenetTracker
                      Ports = 0 ; 0
                      Path = sinks/SimulationExperimentTracker.h
                      Description = Allows to use multiple simulation runs setting new parameter values in each run. It configures Scilab variables according to the current simunation number. This model should run with 1st priority!!
                      Graphic
                          {
                          Position = -11220 ; -14220
                          Dimension = 540 ; 540
                          Direction = Right
                          Color = 15
                          Icon = %realtime%lcd.svg
                          }
                      Parameters
                          {
                          ScilabSimulationSetID = Str; SimulationName ; indicates the simulation set ID
                          ScilabSimulationCounterVariableName = Str; ExperimentNumber ; Name of the Scilab variable that indicates the simulation number.
                          ScilabParametersVariableName = Str; ParameterValues ; Name of the Scilab variable that contains the parameter values for each simulation
                          ScilabParametersValuesVariableName = Str; ParameterNames ; Name of the Scilab variable that contains the parameter names for each simulation
                          }
                      }
                  Atomic
                      {
                      Name = UpdateScilabParams
                      Ports = 1 ; 0
                      Path = sinks/RunScilabJob.h
                      Description = If Scilab is configured as backed in the cmd line options, this model runs Scilab commands at Init, Exit and when receive events.
                      Graphic
                          {
                          Position = -8670 ; -14220
                          Dimension = 540 ; 540
                          Direction = Right
                          Color = 15
                          Icon = %sinks%scilab.ico
                          }
                      Parameters
                          {
                          Run at Init = Str;  ; Scilab Job at Init
                          Run at External = Str;  ; Scilab Job when receive event
                          Run at Exit = Str;  ; Scilab Job at Exit
                          }
                      }
                 Coupled
              {
              Type = Coordinator
              Name = lar_switch_01
              Ports = 4; 4
              Description = Coupled DEVS model
              Graphic
                  {
                  Position = -15455 ; -11110
                  Dimension = 660; 1470
                  Direction = Down
                  Color = 15
                  Icon = %datanetworks%switch.jpg
                  Window = 5000; 5000; 5000; 5000
                  }
              Parameters
                  {
                  }
              System
                  {
                            Inport
                      {
                      Name = Inport0
                      CoupledPort = 1
                      Description = Inport
                      Graphic
                          {
                          Position = -4999  ; -6525
                          Dimension = 600
                          Direction = Right
                          }
                      }
                    Inport
                      {
                      Name = Inport1
                      CoupledPort = 2
                      Description = Inport
                      Graphic
                          {
                          Position = -3999  ; -6525
                          Dimension = 600
                          Direction = Right
                          }
                      }
                    Inport
                      {
                      Name = Inport2
                      CoupledPort = 3
                      Description = Inport
                      Graphic
                          {
                          Position = -2999  ; -6525
                          Dimension = 600
                          Direction = Right
                          }
                      }
                    Inport
                      {
                      Name = Inport3
                      CoupledPort = 4
                      Description = Inport
                      Graphic
                          {
                          Position = -1999  ; -6525
                          Dimension = 600
                          Direction = Right
                          }
                      }
               Atomic
                      {
                      Name = Routing
                      Ports = 4 ; 4
                      Path = PhaseI/Router.h
                      Description = InN: Incomming packets\nInN: Outgoing packets \n This model routes incoming packets to outports. The decision is based on the global table GlobalFlowBasedRoutingTable(flowId, routerName). If there are more than one possible outport, the model uses a routingPolicy (currently hardcoded to Round-Robin) to decide.
                      Graphic
                          {
                          Position = -3600 ; -4155
                          Dimension = 615 ; 1785
                          Direction = Down
                          Color = 15
                          Icon = %datanetworks%router.jpg
                          }
                      Parameters
                          {
                          }
                      }
               Coupled
                     {
                     Type = Coordinator
                     Name = egressPort0
                     Ports = 1; 1
                     Description = Coupled DEVS model
                     Graphic
                         {
                         Position = -4710; -1860
                         Dimension = 1170; 870
                         Direction = Down
                         Color = 15
                         Icon = %datanetworks%priorityegressport.jpg
                         Window = 5000; 5000; 5000; 5000
                         }
                     Parameters
                         {
                         }
                     System
                         {
                         Inport
                             {
                             Name = Inport0
                             CoupledPort = 1
                             Description = Inport
                             Graphic
                                 {
                                 Position = -4695 ; -3525
                                 Dimension = 390
                                 Direction = Right
                                 }
                             }
                         Outport
                             {
                             Name = Outport0
                             CoupledPort = 1
                             Description = Outport
                             Graphic
                                 {
                                 Position = -1785 ; 600
                                 Dimension = 435
                                 Direction = Right
                                 }
                             }
                         Atomic
                             {
                             Name = Link
                             Ports = 1 ; 1
                             Path = PhaseI/Link.h
                             Description = Vector to scalar signal
                             Graphic
                                 {
                                 Position = -3990 ; -915
                                 Dimension = 630 ; 630
                                 Direction = Down
                                 Color = 15
                                 Icon = %vectors%vec2scalar.svg
                                 }
                             Parameters
                                 {
                                 link.capacity = Str; lar_switch_01.egressPort0.link.capacity ; Signal Index
                                 link.delay = Str; lar_switch_01.egressPort0.link.delay ; 
                                 }
                             }
                         Coupled
                             {
                             Type = Coordinator
                             Name = PriorityQueue
                             Ports = 2; 1
                             Description = Coupled DEVS model
                             Graphic
                                 {
                                 Position = -4080; -2895
                                 Dimension = 810; 990
                                 Direction = Down
                                 Color = 15
                                 Icon = %datanetworks%priorityqueue.jpg
                                 Window = 5000; 5000; 5000; 5000
                                 }
                             Parameters
                                 {
                                 }
                             System
                                 {
                                 Inport
                                     {
                                     Name = inPackets
                                     CoupledPort = 1
                                     Description = inportinpackets
                                     Graphic
                                         {
                                         Position = -10710 ; -2625
                                         Dimension = 570
                                         Direction = Right
                                         }
                                     }
                                 Outport
                                     {
                                     Name = outPackets
                                     CoupledPort = 1
                                     Description = outportoutpackets
                                     Graphic
                                         {
                                         Position = -3990 ; -3750
                                         Dimension = 630
                                         Direction = Right
                                         }
                                     }
                                 Inport
                                     {
                                     Name = inDequeReq
                                     CoupledPort = 2
                                     Description = inportindequereq
                                     Graphic
                                         {
                                         Position = -5880 ; -525
                                         Dimension = 525
                                         Direction = Right
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = prioritySelect
                                     Ports = 1 ; 1
                                     Path = PhaseI/PacketPrioritySelect.h
                                     Description = Receives packets, and based on their flowId it selects which output port to send it through
                                     Graphic
                                         {
                                         Position = -8805 ; -2985
                                         Dimension = 675 ; 720
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = VQueues
                                     Ports = 2 ; 2
                                     Path = PhaseI/Vector_NetworkQueueWithSizeOutput.h
                                     Description = In0 Incomming packets to queue\nIn1 Incoming signal to request dequeue\nOut0 Outgoing dequeued packets\nOut1 Outgoing queue lenght information\n\nQueues incoming packets and enqueues them as required by a\nexternal entity. FIFO Policy (FirstInFirstOut). Provides information\nits internal state.
                                     Graphic
                                         {
                                         Position = -7200 ; -2805
                                         Dimension = 600 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %datanetworks%queue_vec.png
                                         }
                                     Parameters
                                         {
                                         MaxCapacity = Str; lar_switch_01.queueCapacity ; Queue Capacity in Bytes. (Use -1 for INF capacity)
                                         ForcedPeriod = Str; -1 ; Force minimum period to transition. Use -1 for INF
                                         Instances = Str; lar_switch_01.numberOfQueues ; 
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = WRRScheduler
                                     Ports = 2 ; 1
                                     Path = PhaseI/WRRScheduler.h
                                     Description = Atomic DEVS model
                                     Graphic
                                         {
                                         Position = -4530 ; -2505
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         numberOfQueues = Str; lar_switch_01.numberOfQueues ; 
                                         weights = Str; lar_switch_01.egressPort0.PriorityQueue.WRRScheduler.weights; vector<double> with the weights for each queue
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = Vect2Scal
                                     Ports = 1 ; 1
                                     Path = vector/Vector2Scalar.h
                                     Description = Vector to scalar signal
                                     Graphic
                                         {
                                         Position = -5505 ; -4080
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %vectors%vec2scalar.svg
                                         }
                                     Parameters
                                         {
                                         Index = Str; -1 ; Signal Index
                                         }
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -8025 ; -8025 ; -7365
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -9975 ; -9975 ; -8940
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; 0
                                     Sink = Cmp ;  3 ;  1 ; -1
                                     PointX = -6450 ; -6450 ; -4665
                                     PointY = -2325 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Prt ;  3 ;  1 ; 0
                                     Sink = Cmp ;  3 ;  2 ; -1
                                     PointX = -5250 ; -5025 ; -5025 ; -4665
                                     PointY = -525 ; -525 ; -2025 ; -2025
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  3 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  2 ; -1
                                     PointX = -3750 ; -3300 ; -3300 ; -7500 ; -7500 ; -7365
                                     PointY = -2175 ; -2175 ; -1275 ; -1275 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -4725 ; -4725 ; -4140
                                     PointY = -3750 ; -3750 ; -3750
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; -1
                                     Sink = Cmp ;  2 ;  1 ; 0
                                     PointX = -5640 ; -6075 ; -6075 ; -6450
                                     PointY = -3750 ; -3750 ; -2625 ; -2625
                                     }
                                 }
                             }
                                 Point
                                     {
                                     ConectedLines = 1 ; 4 ; 5
                                     ConectedExtrems = Org ; Org ; Org
                                     Position = -3675 ; 150
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -150 ; -150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -4200 ; -3900 ; -3900
                                     PointY = -3525 ; -3525 ; -2940
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -1875 ; -1875 ; -1065
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; -1
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3450 ; -3450 ; -2775 ; -2775 ; -3675
                                     PointY = -2940 ; -3300 ; -3300 ; 150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Pnt ;  1 ; -1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -1965
                                     PointY = 150 ; 600 ; 600
                                     }
                         }
                     }
               Coupled
                     {
                     Type = Coordinator
                     Name = egressPort1
                     Ports = 1; 1
                     Description = Coupled DEVS model
                     Graphic
                         {
                         Position = -3510; -1860
                         Dimension = 1170; 870
                         Direction = Down
                         Color = 15
                         Icon = %datanetworks%priorityegressport.jpg
                         Window = 5000; 5000; 5000; 5000
                         }
                     Parameters
                         {
                         }
                     System
                         {
                         Inport
                             {
                             Name = Inport0
                             CoupledPort = 1
                             Description = Inport
                             Graphic
                                 {
                                 Position = -4695 ; -3525
                                 Dimension = 390
                                 Direction = Right
                                 }
                             }
                         Outport
                             {
                             Name = Outport0
                             CoupledPort = 1
                             Description = Outport
                             Graphic
                                 {
                                 Position = -1785 ; 600
                                 Dimension = 435
                                 Direction = Right
                                 }
                             }
                         Atomic
                             {
                             Name = Link
                             Ports = 1 ; 1
                             Path = PhaseI/Link.h
                             Description = Vector to scalar signal
                             Graphic
                                 {
                                 Position = -3990 ; -915
                                 Dimension = 630 ; 630
                                 Direction = Down
                                 Color = 15
                                 Icon = %vectors%vec2scalar.svg
                                 }
                             Parameters
                                 {
                                 link.capacity = Str; lar_switch_01.egressPort1.link.capacity ; Signal Index
                                 link.delay = Str; lar_switch_01.egressPort1.link.delay ; 
                                 }
                             }
                         Coupled
                             {
                             Type = Coordinator
                             Name = PriorityQueue
                             Ports = 2; 1
                             Description = Coupled DEVS model
                             Graphic
                                 {
                                 Position = -4080; -2895
                                 Dimension = 810; 990
                                 Direction = Down
                                 Color = 15
                                 Icon = %datanetworks%priorityqueue.jpg
                                 Window = 5000; 5000; 5000; 5000
                                 }
                             Parameters
                                 {
                                 }
                             System
                                 {
                                 Inport
                                     {
                                     Name = inPackets
                                     CoupledPort = 1
                                     Description = inportinpackets
                                     Graphic
                                         {
                                         Position = -10710 ; -2625
                                         Dimension = 570
                                         Direction = Right
                                         }
                                     }
                                 Outport
                                     {
                                     Name = outPackets
                                     CoupledPort = 1
                                     Description = outportoutpackets
                                     Graphic
                                         {
                                         Position = -3990 ; -3750
                                         Dimension = 630
                                         Direction = Right
                                         }
                                     }
                                 Inport
                                     {
                                     Name = inDequeReq
                                     CoupledPort = 2
                                     Description = inportindequereq
                                     Graphic
                                         {
                                         Position = -5880 ; -525
                                         Dimension = 525
                                         Direction = Right
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = prioritySelect
                                     Ports = 1 ; 1
                                     Path = PhaseI/PacketPrioritySelect.h
                                     Description = Receives packets, and based on their flowId it selects which output port to send it through
                                     Graphic
                                         {
                                         Position = -8805 ; -2985
                                         Dimension = 675 ; 720
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = VQueues
                                     Ports = 2 ; 2
                                     Path = PhaseI/Vector_NetworkQueueWithSizeOutput.h
                                     Description = In0 Incomming packets to queue\nIn1 Incoming signal to request dequeue\nOut0 Outgoing dequeued packets\nOut1 Outgoing queue lenght information\n\nQueues incoming packets and enqueues them as required by a\nexternal entity. FIFO Policy (FirstInFirstOut). Provides information\nits internal state.
                                     Graphic
                                         {
                                         Position = -7200 ; -2805
                                         Dimension = 600 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %datanetworks%queue_vec.png
                                         }
                                     Parameters
                                         {
                                         MaxCapacity = Str; lar_switch_01.queueCapacity ; Queue Capacity in Bytes. (Use -1 for INF capacity)
                                         ForcedPeriod = Str; -1 ; Force minimum period to transition. Use -1 for INF
                                         Instances = Str; lar_switch_01.numberOfQueues ; 
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = WRRScheduler
                                     Ports = 2 ; 1
                                     Path = PhaseI/WRRScheduler.h
                                     Description = Atomic DEVS model
                                     Graphic
                                         {
                                         Position = -4530 ; -2505
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         numberOfQueues = Str; lar_switch_01.numberOfQueues ; 
                                         weights = Str; lar_switch_01.egressPort1.PriorityQueue.WRRScheduler.weights; vector<double> with the weights for each queue
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = Vect2Scal
                                     Ports = 1 ; 1
                                     Path = vector/Vector2Scalar.h
                                     Description = Vector to scalar signal
                                     Graphic
                                         {
                                         Position = -5505 ; -4080
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %vectors%vec2scalar.svg
                                         }
                                     Parameters
                                         {
                                         Index = Str; -1 ; Signal Index
                                         }
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -8025 ; -8025 ; -7365
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -9975 ; -9975 ; -8940
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; 0
                                     Sink = Cmp ;  3 ;  1 ; -1
                                     PointX = -6450 ; -6450 ; -4665
                                     PointY = -2325 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Prt ;  3 ;  1 ; 0
                                     Sink = Cmp ;  3 ;  2 ; -1
                                     PointX = -5250 ; -5025 ; -5025 ; -4665
                                     PointY = -525 ; -525 ; -2025 ; -2025
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  3 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  2 ; -1
                                     PointX = -3750 ; -3300 ; -3300 ; -7500 ; -7500 ; -7365
                                     PointY = -2175 ; -2175 ; -1275 ; -1275 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -4725 ; -4725 ; -4140
                                     PointY = -3750 ; -3750 ; -3750
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; -1
                                     Sink = Cmp ;  2 ;  1 ; 0
                                     PointX = -5640 ; -6075 ; -6075 ; -6450
                                     PointY = -3750 ; -3750 ; -2625 ; -2625
                                     }
                                 }
                             }
                                 Point
                                     {
                                     ConectedLines = 1 ; 4 ; 5
                                     ConectedExtrems = Org ; Org ; Org
                                     Position = -3675 ; 150
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -150 ; -150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -4200 ; -3900 ; -3900
                                     PointY = -3525 ; -3525 ; -2940
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -1875 ; -1875 ; -1065
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; -1
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3450 ; -3450 ; -2775 ; -2775 ; -3675
                                     PointY = -2940 ; -3300 ; -3300 ; 150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Pnt ;  1 ; -1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -1965
                                     PointY = 150 ; 600 ; 600
                                     }
                         }
                     }
               Coupled
                     {
                     Type = Coordinator
                     Name = egressPort2
                     Ports = 1; 1
                     Description = Coupled DEVS model
                     Graphic
                         {
                         Position = -2310; -1860
                         Dimension = 1170; 870
                         Direction = Down
                         Color = 15
                         Icon = %datanetworks%priorityegressport.jpg
                         Window = 5000; 5000; 5000; 5000
                         }
                     Parameters
                         {
                         }
                     System
                         {
                         Inport
                             {
                             Name = Inport0
                             CoupledPort = 1
                             Description = Inport
                             Graphic
                                 {
                                 Position = -4695 ; -3525
                                 Dimension = 390
                                 Direction = Right
                                 }
                             }
                         Outport
                             {
                             Name = Outport0
                             CoupledPort = 1
                             Description = Outport
                             Graphic
                                 {
                                 Position = -1785 ; 600
                                 Dimension = 435
                                 Direction = Right
                                 }
                             }
                         Atomic
                             {
                             Name = Link
                             Ports = 1 ; 1
                             Path = PhaseI/Link.h
                             Description = Vector to scalar signal
                             Graphic
                                 {
                                 Position = -3990 ; -915
                                 Dimension = 630 ; 630
                                 Direction = Down
                                 Color = 15
                                 Icon = %vectors%vec2scalar.svg
                                 }
                             Parameters
                                 {
                                 link.capacity = Str; lar_switch_01.egressPort2.link.capacity ; Signal Index
                                 link.delay = Str; lar_switch_01.egressPort2.link.delay ; 
                                 }
                             }
                         Coupled
                             {
                             Type = Coordinator
                             Name = PriorityQueue
                             Ports = 2; 1
                             Description = Coupled DEVS model
                             Graphic
                                 {
                                 Position = -4080; -2895
                                 Dimension = 810; 990
                                 Direction = Down
                                 Color = 15
                                 Icon = %datanetworks%priorityqueue.jpg
                                 Window = 5000; 5000; 5000; 5000
                                 }
                             Parameters
                                 {
                                 }
                             System
                                 {
                                 Inport
                                     {
                                     Name = inPackets
                                     CoupledPort = 1
                                     Description = inportinpackets
                                     Graphic
                                         {
                                         Position = -10710 ; -2625
                                         Dimension = 570
                                         Direction = Right
                                         }
                                     }
                                 Outport
                                     {
                                     Name = outPackets
                                     CoupledPort = 1
                                     Description = outportoutpackets
                                     Graphic
                                         {
                                         Position = -3990 ; -3750
                                         Dimension = 630
                                         Direction = Right
                                         }
                                     }
                                 Inport
                                     {
                                     Name = inDequeReq
                                     CoupledPort = 2
                                     Description = inportindequereq
                                     Graphic
                                         {
                                         Position = -5880 ; -525
                                         Dimension = 525
                                         Direction = Right
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = prioritySelect
                                     Ports = 1 ; 1
                                     Path = PhaseI/PacketPrioritySelect.h
                                     Description = Receives packets, and based on their flowId it selects which output port to send it through
                                     Graphic
                                         {
                                         Position = -8805 ; -2985
                                         Dimension = 675 ; 720
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = VQueues
                                     Ports = 2 ; 2
                                     Path = PhaseI/Vector_NetworkQueueWithSizeOutput.h
                                     Description = In0 Incomming packets to queue\nIn1 Incoming signal to request dequeue\nOut0 Outgoing dequeued packets\nOut1 Outgoing queue lenght information\n\nQueues incoming packets and enqueues them as required by a\nexternal entity. FIFO Policy (FirstInFirstOut). Provides information\nits internal state.
                                     Graphic
                                         {
                                         Position = -7200 ; -2805
                                         Dimension = 600 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %datanetworks%queue_vec.png
                                         }
                                     Parameters
                                         {
                                         MaxCapacity = Str; lar_switch_01.queueCapacity ; Queue Capacity in Bytes. (Use -1 for INF capacity)
                                         ForcedPeriod = Str; -1 ; Force minimum period to transition. Use -1 for INF
                                         Instances = Str; lar_switch_01.numberOfQueues ; 
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = WRRScheduler
                                     Ports = 2 ; 1
                                     Path = PhaseI/WRRScheduler.h
                                     Description = Atomic DEVS model
                                     Graphic
                                         {
                                         Position = -4530 ; -2505
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         numberOfQueues = Str; lar_switch_01.numberOfQueues ; 
                                         weights = Str; lar_switch_01.egressPort2.PriorityQueue.WRRScheduler.weights; vector<double> with the weights for each queue
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = Vect2Scal
                                     Ports = 1 ; 1
                                     Path = vector/Vector2Scalar.h
                                     Description = Vector to scalar signal
                                     Graphic
                                         {
                                         Position = -5505 ; -4080
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %vectors%vec2scalar.svg
                                         }
                                     Parameters
                                         {
                                         Index = Str; -1 ; Signal Index
                                         }
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -8025 ; -8025 ; -7365
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -9975 ; -9975 ; -8940
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; 0
                                     Sink = Cmp ;  3 ;  1 ; -1
                                     PointX = -6450 ; -6450 ; -4665
                                     PointY = -2325 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Prt ;  3 ;  1 ; 0
                                     Sink = Cmp ;  3 ;  2 ; -1
                                     PointX = -5250 ; -5025 ; -5025 ; -4665
                                     PointY = -525 ; -525 ; -2025 ; -2025
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  3 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  2 ; -1
                                     PointX = -3750 ; -3300 ; -3300 ; -7500 ; -7500 ; -7365
                                     PointY = -2175 ; -2175 ; -1275 ; -1275 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -4725 ; -4725 ; -4140
                                     PointY = -3750 ; -3750 ; -3750
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; -1
                                     Sink = Cmp ;  2 ;  1 ; 0
                                     PointX = -5640 ; -6075 ; -6075 ; -6450
                                     PointY = -3750 ; -3750 ; -2625 ; -2625
                                     }
                                 }
                             }
                                 Point
                                     {
                                     ConectedLines = 1 ; 4 ; 5
                                     ConectedExtrems = Org ; Org ; Org
                                     Position = -3675 ; 150
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -150 ; -150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -4200 ; -3900 ; -3900
                                     PointY = -3525 ; -3525 ; -2940
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -1875 ; -1875 ; -1065
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; -1
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3450 ; -3450 ; -2775 ; -2775 ; -3675
                                     PointY = -2940 ; -3300 ; -3300 ; 150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Pnt ;  1 ; -1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -1965
                                     PointY = 150 ; 600 ; 600
                                     }
                         }
                     }
               Coupled
                     {
                     Type = Coordinator
                     Name = egressPort3
                     Ports = 1; 1
                     Description = Coupled DEVS model
                     Graphic
                         {
                         Position = -1110; -1860
                         Dimension = 1170; 870
                         Direction = Down
                         Color = 15
                         Icon = %datanetworks%priorityegressport.jpg
                         Window = 5000; 5000; 5000; 5000
                         }
                     Parameters
                         {
                         }
                     System
                         {
                         Inport
                             {
                             Name = Inport0
                             CoupledPort = 1
                             Description = Inport
                             Graphic
                                 {
                                 Position = -4695 ; -3525
                                 Dimension = 390
                                 Direction = Right
                                 }
                             }
                         Outport
                             {
                             Name = Outport0
                             CoupledPort = 1
                             Description = Outport
                             Graphic
                                 {
                                 Position = -1785 ; 600
                                 Dimension = 435
                                 Direction = Right
                                 }
                             }
                         Atomic
                             {
                             Name = Link
                             Ports = 1 ; 1
                             Path = PhaseI/Link.h
                             Description = Vector to scalar signal
                             Graphic
                                 {
                                 Position = -3990 ; -915
                                 Dimension = 630 ; 630
                                 Direction = Down
                                 Color = 15
                                 Icon = %vectors%vec2scalar.svg
                                 }
                             Parameters
                                 {
                                 link.capacity = Str; lar_switch_01.egressPort3.link.capacity ; Signal Index
                                 link.delay = Str; lar_switch_01.egressPort3.link.delay ; 
                                 }
                             }
                         Coupled
                             {
                             Type = Coordinator
                             Name = PriorityQueue
                             Ports = 2; 1
                             Description = Coupled DEVS model
                             Graphic
                                 {
                                 Position = -4080; -2895
                                 Dimension = 810; 990
                                 Direction = Down
                                 Color = 15
                                 Icon = %datanetworks%priorityqueue.jpg
                                 Window = 5000; 5000; 5000; 5000
                                 }
                             Parameters
                                 {
                                 }
                             System
                                 {
                                 Inport
                                     {
                                     Name = inPackets
                                     CoupledPort = 1
                                     Description = inportinpackets
                                     Graphic
                                         {
                                         Position = -10710 ; -2625
                                         Dimension = 570
                                         Direction = Right
                                         }
                                     }
                                 Outport
                                     {
                                     Name = outPackets
                                     CoupledPort = 1
                                     Description = outportoutpackets
                                     Graphic
                                         {
                                         Position = -3990 ; -3750
                                         Dimension = 630
                                         Direction = Right
                                         }
                                     }
                                 Inport
                                     {
                                     Name = inDequeReq
                                     CoupledPort = 2
                                     Description = inportindequereq
                                     Graphic
                                         {
                                         Position = -5880 ; -525
                                         Dimension = 525
                                         Direction = Right
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = prioritySelect
                                     Ports = 1 ; 1
                                     Path = PhaseI/PacketPrioritySelect.h
                                     Description = Receives packets, and based on their flowId it selects which output port to send it through
                                     Graphic
                                         {
                                         Position = -8805 ; -2985
                                         Dimension = 675 ; 720
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = VQueues
                                     Ports = 2 ; 2
                                     Path = PhaseI/Vector_NetworkQueueWithSizeOutput.h
                                     Description = In0 Incomming packets to queue\nIn1 Incoming signal to request dequeue\nOut0 Outgoing dequeued packets\nOut1 Outgoing queue lenght information\n\nQueues incoming packets and enqueues them as required by a\nexternal entity. FIFO Policy (FirstInFirstOut). Provides information\nits internal state.
                                     Graphic
                                         {
                                         Position = -7200 ; -2805
                                         Dimension = 600 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %datanetworks%queue_vec.png
                                         }
                                     Parameters
                                         {
                                         MaxCapacity = Str; lar_switch_01.queueCapacity ; Queue Capacity in Bytes. (Use -1 for INF capacity)
                                         ForcedPeriod = Str; -1 ; Force minimum period to transition. Use -1 for INF
                                         Instances = Str; lar_switch_01.numberOfQueues ; 
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = WRRScheduler
                                     Ports = 2 ; 1
                                     Path = PhaseI/WRRScheduler.h
                                     Description = Atomic DEVS model
                                     Graphic
                                         {
                                         Position = -4530 ; -2505
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         numberOfQueues = Str; lar_switch_01.numberOfQueues ; 
                                         weights = Str; lar_switch_01.egressPort3.PriorityQueue.WRRScheduler.weights; vector<double> with the weights for each queue
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = Vect2Scal
                                     Ports = 1 ; 1
                                     Path = vector/Vector2Scalar.h
                                     Description = Vector to scalar signal
                                     Graphic
                                         {
                                         Position = -5505 ; -4080
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %vectors%vec2scalar.svg
                                         }
                                     Parameters
                                         {
                                         Index = Str; -1 ; Signal Index
                                         }
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -8025 ; -8025 ; -7365
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -9975 ; -9975 ; -8940
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; 0
                                     Sink = Cmp ;  3 ;  1 ; -1
                                     PointX = -6450 ; -6450 ; -4665
                                     PointY = -2325 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Prt ;  3 ;  1 ; 0
                                     Sink = Cmp ;  3 ;  2 ; -1
                                     PointX = -5250 ; -5025 ; -5025 ; -4665
                                     PointY = -525 ; -525 ; -2025 ; -2025
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  3 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  2 ; -1
                                     PointX = -3750 ; -3300 ; -3300 ; -7500 ; -7500 ; -7365
                                     PointY = -2175 ; -2175 ; -1275 ; -1275 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -4725 ; -4725 ; -4140
                                     PointY = -3750 ; -3750 ; -3750
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; -1
                                     Sink = Cmp ;  2 ;  1 ; 0
                                     PointX = -5640 ; -6075 ; -6075 ; -6450
                                     PointY = -3750 ; -3750 ; -2625 ; -2625
                                     }
                                 }
                             }
                                 Point
                                     {
                                     ConectedLines = 1 ; 4 ; 5
                                     ConectedExtrems = Org ; Org ; Org
                                     Position = -3675 ; 150
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -150 ; -150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -4200 ; -3900 ; -3900
                                     PointY = -3525 ; -3525 ; -2940
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -1875 ; -1875 ; -1065
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; -1
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3450 ; -3450 ; -2775 ; -2775 ; -3675
                                     PointY = -2940 ; -3300 ; -3300 ; 150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Pnt ;  1 ; -1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -1965
                                     PointY = 150 ; 600 ; 600
                                     }
                         }
                     }
               Outport
                     {
                     Name = Outport1
                     CoupledPort = 1
                     Description = Outport
                     Graphic
                        {
                        Position = -5000 ; 2175
                        Dimension = 600
                        Direction = Right
                        }
                     }
               Outport
                     {
                     Name = Outport2
                     CoupledPort = 2
                     Description = Outport
                     Graphic
                        {
                        Position = -4000 ; 2175
                        Dimension = 600
                        Direction = Right
                        }
                     }
               Outport
                     {
                     Name = Outport3
                     CoupledPort = 3
                     Description = Outport
                     Graphic
                        {
                        Position = -3000 ; 2175
                        Dimension = 600
                        Direction = Right
                        }
                     }
               Outport
                     {
                     Name = Outport4
                     CoupledPort = 4
                     Description = Outport
                     Graphic
                        {
                        Position = -2000 ; 2175
                        Dimension = 600
                        Direction = Right
                        }
                     }
Line
            {
            Source = Prt ;  1 ;  1 ; 0
            Sink = Cmp ; 1  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Prt ;  2 ;  1 ; 0
            Sink = Cmp ; 1  ;  2 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Prt ;  3 ;  1 ; 0
            Sink = Cmp ; 1  ;  3 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Prt ;  4 ;  1 ; 0
            Sink = Cmp ; 1  ;  4 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  1 ;  1 ; 0
            Sink = Cmp ; 2  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  1 ;  2 ; 0
            Sink = Cmp ; 3  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  1 ;  3 ; 0
            Sink = Cmp ; 4  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  1 ;  4 ; 0
            Sink = Cmp ; 5  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  2 ;  1 ; 0
            Sink = Prt ; 5  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  3 ;  1 ; 0
            Sink = Prt ; 6  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  4 ;  1 ; 0
            Sink = Prt ; 7  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  5 ;  1 ; 0
            Sink = Prt ; 8  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
               }
              }
           Coupled
              {
              Type = Coordinator
              Name = lar_switch_02
              Ports = 4; 4
              Description = Coupled DEVS model
              Graphic
                  {
                  Position = -13455 ; -9510
                  Dimension = 660; 1470
                  Direction = Down
                  Color = 15
                  Icon = %datanetworks%switch.jpg
                  Window = 5000; 5000; 5000; 5000
                  }
              Parameters
                  {
                  }
              System
                  {
                            Inport
                      {
                      Name = Inport0
                      CoupledPort = 1
                      Description = Inport
                      Graphic
                          {
                          Position = -4999  ; -6525
                          Dimension = 600
                          Direction = Right
                          }
                      }
                    Inport
                      {
                      Name = Inport1
                      CoupledPort = 2
                      Description = Inport
                      Graphic
                          {
                          Position = -3999  ; -6525
                          Dimension = 600
                          Direction = Right
                          }
                      }
                    Inport
                      {
                      Name = Inport2
                      CoupledPort = 3
                      Description = Inport
                      Graphic
                          {
                          Position = -2999  ; -6525
                          Dimension = 600
                          Direction = Right
                          }
                      }
                    Inport
                      {
                      Name = Inport3
                      CoupledPort = 4
                      Description = Inport
                      Graphic
                          {
                          Position = -1999  ; -6525
                          Dimension = 600
                          Direction = Right
                          }
                      }
               Atomic
                      {
                      Name = Routing
                      Ports = 4 ; 4
                      Path = PhaseI/Router.h
                      Description = InN: Incomming packets\nInN: Outgoing packets \n This model routes incoming packets to outports. The decision is based on the global table GlobalFlowBasedRoutingTable(flowId, routerName). If there are more than one possible outport, the model uses a routingPolicy (currently hardcoded to Round-Robin) to decide.
                      Graphic
                          {
                          Position = -3600 ; -4155
                          Dimension = 615 ; 1785
                          Direction = Down
                          Color = 15
                          Icon = %datanetworks%router.jpg
                          }
                      Parameters
                          {
                          }
                      }
               Coupled
                     {
                     Type = Coordinator
                     Name = egressPort0
                     Ports = 1; 1
                     Description = Coupled DEVS model
                     Graphic
                         {
                         Position = -4710; -1860
                         Dimension = 1170; 870
                         Direction = Down
                         Color = 15
                         Icon = %datanetworks%priorityegressport.jpg
                         Window = 5000; 5000; 5000; 5000
                         }
                     Parameters
                         {
                         }
                     System
                         {
                         Inport
                             {
                             Name = Inport0
                             CoupledPort = 1
                             Description = Inport
                             Graphic
                                 {
                                 Position = -4695 ; -3525
                                 Dimension = 390
                                 Direction = Right
                                 }
                             }
                         Outport
                             {
                             Name = Outport0
                             CoupledPort = 1
                             Description = Outport
                             Graphic
                                 {
                                 Position = -1785 ; 600
                                 Dimension = 435
                                 Direction = Right
                                 }
                             }
                         Atomic
                             {
                             Name = Link
                             Ports = 1 ; 1
                             Path = PhaseI/Link.h
                             Description = Vector to scalar signal
                             Graphic
                                 {
                                 Position = -3990 ; -915
                                 Dimension = 630 ; 630
                                 Direction = Down
                                 Color = 15
                                 Icon = %vectors%vec2scalar.svg
                                 }
                             Parameters
                                 {
                                 link.capacity = Str; lar_switch_02.egressPort0.link.capacity ; Signal Index
                                 link.delay = Str; lar_switch_02.egressPort0.link.delay ; 
                                 }
                             }
                         Coupled
                             {
                             Type = Coordinator
                             Name = PriorityQueue
                             Ports = 2; 1
                             Description = Coupled DEVS model
                             Graphic
                                 {
                                 Position = -4080; -2895
                                 Dimension = 810; 990
                                 Direction = Down
                                 Color = 15
                                 Icon = %datanetworks%priorityqueue.jpg
                                 Window = 5000; 5000; 5000; 5000
                                 }
                             Parameters
                                 {
                                 }
                             System
                                 {
                                 Inport
                                     {
                                     Name = inPackets
                                     CoupledPort = 1
                                     Description = inportinpackets
                                     Graphic
                                         {
                                         Position = -10710 ; -2625
                                         Dimension = 570
                                         Direction = Right
                                         }
                                     }
                                 Outport
                                     {
                                     Name = outPackets
                                     CoupledPort = 1
                                     Description = outportoutpackets
                                     Graphic
                                         {
                                         Position = -3990 ; -3750
                                         Dimension = 630
                                         Direction = Right
                                         }
                                     }
                                 Inport
                                     {
                                     Name = inDequeReq
                                     CoupledPort = 2
                                     Description = inportindequereq
                                     Graphic
                                         {
                                         Position = -5880 ; -525
                                         Dimension = 525
                                         Direction = Right
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = prioritySelect
                                     Ports = 1 ; 1
                                     Path = PhaseI/PacketPrioritySelect.h
                                     Description = Receives packets, and based on their flowId it selects which output port to send it through
                                     Graphic
                                         {
                                         Position = -8805 ; -2985
                                         Dimension = 675 ; 720
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = VQueues
                                     Ports = 2 ; 2
                                     Path = PhaseI/Vector_NetworkQueueWithSizeOutput.h
                                     Description = In0 Incomming packets to queue\nIn1 Incoming signal to request dequeue\nOut0 Outgoing dequeued packets\nOut1 Outgoing queue lenght information\n\nQueues incoming packets and enqueues them as required by a\nexternal entity. FIFO Policy (FirstInFirstOut). Provides information\nits internal state.
                                     Graphic
                                         {
                                         Position = -7200 ; -2805
                                         Dimension = 600 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %datanetworks%queue_vec.png
                                         }
                                     Parameters
                                         {
                                         MaxCapacity = Str; lar_switch_02.queueCapacity ; Queue Capacity in Bytes. (Use -1 for INF capacity)
                                         ForcedPeriod = Str; -1 ; Force minimum period to transition. Use -1 for INF
                                         Instances = Str; lar_switch_02.numberOfQueues ; 
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = WRRScheduler
                                     Ports = 2 ; 1
                                     Path = PhaseI/WRRScheduler.h
                                     Description = Atomic DEVS model
                                     Graphic
                                         {
                                         Position = -4530 ; -2505
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         numberOfQueues = Str; lar_switch_02.numberOfQueues ; 
                                         weights = Str; lar_switch_02.egressPort0.PriorityQueue.WRRScheduler.weights; vector<double> with the weights for each queue
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = Vect2Scal
                                     Ports = 1 ; 1
                                     Path = vector/Vector2Scalar.h
                                     Description = Vector to scalar signal
                                     Graphic
                                         {
                                         Position = -5505 ; -4080
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %vectors%vec2scalar.svg
                                         }
                                     Parameters
                                         {
                                         Index = Str; -1 ; Signal Index
                                         }
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -8025 ; -8025 ; -7365
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -9975 ; -9975 ; -8940
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; 0
                                     Sink = Cmp ;  3 ;  1 ; -1
                                     PointX = -6450 ; -6450 ; -4665
                                     PointY = -2325 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Prt ;  3 ;  1 ; 0
                                     Sink = Cmp ;  3 ;  2 ; -1
                                     PointX = -5250 ; -5025 ; -5025 ; -4665
                                     PointY = -525 ; -525 ; -2025 ; -2025
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  3 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  2 ; -1
                                     PointX = -3750 ; -3300 ; -3300 ; -7500 ; -7500 ; -7365
                                     PointY = -2175 ; -2175 ; -1275 ; -1275 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -4725 ; -4725 ; -4140
                                     PointY = -3750 ; -3750 ; -3750
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; -1
                                     Sink = Cmp ;  2 ;  1 ; 0
                                     PointX = -5640 ; -6075 ; -6075 ; -6450
                                     PointY = -3750 ; -3750 ; -2625 ; -2625
                                     }
                                 }
                             }
                                 Point
                                     {
                                     ConectedLines = 1 ; 4 ; 5
                                     ConectedExtrems = Org ; Org ; Org
                                     Position = -3675 ; 150
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -150 ; -150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -4200 ; -3900 ; -3900
                                     PointY = -3525 ; -3525 ; -2940
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -1875 ; -1875 ; -1065
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; -1
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3450 ; -3450 ; -2775 ; -2775 ; -3675
                                     PointY = -2940 ; -3300 ; -3300 ; 150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Pnt ;  1 ; -1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -1965
                                     PointY = 150 ; 600 ; 600
                                     }
                         }
                     }
               Coupled
                     {
                     Type = Coordinator
                     Name = egressPort1
                     Ports = 1; 1
                     Description = Coupled DEVS model
                     Graphic
                         {
                         Position = -3510; -1860
                         Dimension = 1170; 870
                         Direction = Down
                         Color = 15
                         Icon = %datanetworks%priorityegressport.jpg
                         Window = 5000; 5000; 5000; 5000
                         }
                     Parameters
                         {
                         }
                     System
                         {
                         Inport
                             {
                             Name = Inport0
                             CoupledPort = 1
                             Description = Inport
                             Graphic
                                 {
                                 Position = -4695 ; -3525
                                 Dimension = 390
                                 Direction = Right
                                 }
                             }
                         Outport
                             {
                             Name = Outport0
                             CoupledPort = 1
                             Description = Outport
                             Graphic
                                 {
                                 Position = -1785 ; 600
                                 Dimension = 435
                                 Direction = Right
                                 }
                             }
                         Atomic
                             {
                             Name = Link
                             Ports = 1 ; 1
                             Path = PhaseI/Link.h
                             Description = Vector to scalar signal
                             Graphic
                                 {
                                 Position = -3990 ; -915
                                 Dimension = 630 ; 630
                                 Direction = Down
                                 Color = 15
                                 Icon = %vectors%vec2scalar.svg
                                 }
                             Parameters
                                 {
                                 link.capacity = Str; lar_switch_02.egressPort1.link.capacity ; Signal Index
                                 link.delay = Str; lar_switch_02.egressPort1.link.delay ; 
                                 }
                             }
                         Coupled
                             {
                             Type = Coordinator
                             Name = PriorityQueue
                             Ports = 2; 1
                             Description = Coupled DEVS model
                             Graphic
                                 {
                                 Position = -4080; -2895
                                 Dimension = 810; 990
                                 Direction = Down
                                 Color = 15
                                 Icon = %datanetworks%priorityqueue.jpg
                                 Window = 5000; 5000; 5000; 5000
                                 }
                             Parameters
                                 {
                                 }
                             System
                                 {
                                 Inport
                                     {
                                     Name = inPackets
                                     CoupledPort = 1
                                     Description = inportinpackets
                                     Graphic
                                         {
                                         Position = -10710 ; -2625
                                         Dimension = 570
                                         Direction = Right
                                         }
                                     }
                                 Outport
                                     {
                                     Name = outPackets
                                     CoupledPort = 1
                                     Description = outportoutpackets
                                     Graphic
                                         {
                                         Position = -3990 ; -3750
                                         Dimension = 630
                                         Direction = Right
                                         }
                                     }
                                 Inport
                                     {
                                     Name = inDequeReq
                                     CoupledPort = 2
                                     Description = inportindequereq
                                     Graphic
                                         {
                                         Position = -5880 ; -525
                                         Dimension = 525
                                         Direction = Right
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = prioritySelect
                                     Ports = 1 ; 1
                                     Path = PhaseI/PacketPrioritySelect.h
                                     Description = Receives packets, and based on their flowId it selects which output port to send it through
                                     Graphic
                                         {
                                         Position = -8805 ; -2985
                                         Dimension = 675 ; 720
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = VQueues
                                     Ports = 2 ; 2
                                     Path = PhaseI/Vector_NetworkQueueWithSizeOutput.h
                                     Description = In0 Incomming packets to queue\nIn1 Incoming signal to request dequeue\nOut0 Outgoing dequeued packets\nOut1 Outgoing queue lenght information\n\nQueues incoming packets and enqueues them as required by a\nexternal entity. FIFO Policy (FirstInFirstOut). Provides information\nits internal state.
                                     Graphic
                                         {
                                         Position = -7200 ; -2805
                                         Dimension = 600 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %datanetworks%queue_vec.png
                                         }
                                     Parameters
                                         {
                                         MaxCapacity = Str; lar_switch_02.queueCapacity ; Queue Capacity in Bytes. (Use -1 for INF capacity)
                                         ForcedPeriod = Str; -1 ; Force minimum period to transition. Use -1 for INF
                                         Instances = Str; lar_switch_02.numberOfQueues ; 
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = WRRScheduler
                                     Ports = 2 ; 1
                                     Path = PhaseI/WRRScheduler.h
                                     Description = Atomic DEVS model
                                     Graphic
                                         {
                                         Position = -4530 ; -2505
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         numberOfQueues = Str; lar_switch_02.numberOfQueues ; 
                                         weights = Str; lar_switch_02.egressPort1.PriorityQueue.WRRScheduler.weights; vector<double> with the weights for each queue
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = Vect2Scal
                                     Ports = 1 ; 1
                                     Path = vector/Vector2Scalar.h
                                     Description = Vector to scalar signal
                                     Graphic
                                         {
                                         Position = -5505 ; -4080
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %vectors%vec2scalar.svg
                                         }
                                     Parameters
                                         {
                                         Index = Str; -1 ; Signal Index
                                         }
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -8025 ; -8025 ; -7365
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -9975 ; -9975 ; -8940
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; 0
                                     Sink = Cmp ;  3 ;  1 ; -1
                                     PointX = -6450 ; -6450 ; -4665
                                     PointY = -2325 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Prt ;  3 ;  1 ; 0
                                     Sink = Cmp ;  3 ;  2 ; -1
                                     PointX = -5250 ; -5025 ; -5025 ; -4665
                                     PointY = -525 ; -525 ; -2025 ; -2025
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  3 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  2 ; -1
                                     PointX = -3750 ; -3300 ; -3300 ; -7500 ; -7500 ; -7365
                                     PointY = -2175 ; -2175 ; -1275 ; -1275 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -4725 ; -4725 ; -4140
                                     PointY = -3750 ; -3750 ; -3750
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; -1
                                     Sink = Cmp ;  2 ;  1 ; 0
                                     PointX = -5640 ; -6075 ; -6075 ; -6450
                                     PointY = -3750 ; -3750 ; -2625 ; -2625
                                     }
                                 }
                             }
                                 Point
                                     {
                                     ConectedLines = 1 ; 4 ; 5
                                     ConectedExtrems = Org ; Org ; Org
                                     Position = -3675 ; 150
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -150 ; -150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -4200 ; -3900 ; -3900
                                     PointY = -3525 ; -3525 ; -2940
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -1875 ; -1875 ; -1065
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; -1
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3450 ; -3450 ; -2775 ; -2775 ; -3675
                                     PointY = -2940 ; -3300 ; -3300 ; 150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Pnt ;  1 ; -1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -1965
                                     PointY = 150 ; 600 ; 600
                                     }
                         }
                     }
               Coupled
                     {
                     Type = Coordinator
                     Name = egressPort2
                     Ports = 1; 1
                     Description = Coupled DEVS model
                     Graphic
                         {
                         Position = -2310; -1860
                         Dimension = 1170; 870
                         Direction = Down
                         Color = 15
                         Icon = %datanetworks%priorityegressport.jpg
                         Window = 5000; 5000; 5000; 5000
                         }
                     Parameters
                         {
                         }
                     System
                         {
                         Inport
                             {
                             Name = Inport0
                             CoupledPort = 1
                             Description = Inport
                             Graphic
                                 {
                                 Position = -4695 ; -3525
                                 Dimension = 390
                                 Direction = Right
                                 }
                             }
                         Outport
                             {
                             Name = Outport0
                             CoupledPort = 1
                             Description = Outport
                             Graphic
                                 {
                                 Position = -1785 ; 600
                                 Dimension = 435
                                 Direction = Right
                                 }
                             }
                         Atomic
                             {
                             Name = Link
                             Ports = 1 ; 1
                             Path = PhaseI/Link.h
                             Description = Vector to scalar signal
                             Graphic
                                 {
                                 Position = -3990 ; -915
                                 Dimension = 630 ; 630
                                 Direction = Down
                                 Color = 15
                                 Icon = %vectors%vec2scalar.svg
                                 }
                             Parameters
                                 {
                                 link.capacity = Str; lar_switch_02.egressPort2.link.capacity ; Signal Index
                                 link.delay = Str; lar_switch_02.egressPort2.link.delay ; 
                                 }
                             }
                         Coupled
                             {
                             Type = Coordinator
                             Name = PriorityQueue
                             Ports = 2; 1
                             Description = Coupled DEVS model
                             Graphic
                                 {
                                 Position = -4080; -2895
                                 Dimension = 810; 990
                                 Direction = Down
                                 Color = 15
                                 Icon = %datanetworks%priorityqueue.jpg
                                 Window = 5000; 5000; 5000; 5000
                                 }
                             Parameters
                                 {
                                 }
                             System
                                 {
                                 Inport
                                     {
                                     Name = inPackets
                                     CoupledPort = 1
                                     Description = inportinpackets
                                     Graphic
                                         {
                                         Position = -10710 ; -2625
                                         Dimension = 570
                                         Direction = Right
                                         }
                                     }
                                 Outport
                                     {
                                     Name = outPackets
                                     CoupledPort = 1
                                     Description = outportoutpackets
                                     Graphic
                                         {
                                         Position = -3990 ; -3750
                                         Dimension = 630
                                         Direction = Right
                                         }
                                     }
                                 Inport
                                     {
                                     Name = inDequeReq
                                     CoupledPort = 2
                                     Description = inportindequereq
                                     Graphic
                                         {
                                         Position = -5880 ; -525
                                         Dimension = 525
                                         Direction = Right
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = prioritySelect
                                     Ports = 1 ; 1
                                     Path = PhaseI/PacketPrioritySelect.h
                                     Description = Receives packets, and based on their flowId it selects which output port to send it through
                                     Graphic
                                         {
                                         Position = -8805 ; -2985
                                         Dimension = 675 ; 720
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = VQueues
                                     Ports = 2 ; 2
                                     Path = PhaseI/Vector_NetworkQueueWithSizeOutput.h
                                     Description = In0 Incomming packets to queue\nIn1 Incoming signal to request dequeue\nOut0 Outgoing dequeued packets\nOut1 Outgoing queue lenght information\n\nQueues incoming packets and enqueues them as required by a\nexternal entity. FIFO Policy (FirstInFirstOut). Provides information\nits internal state.
                                     Graphic
                                         {
                                         Position = -7200 ; -2805
                                         Dimension = 600 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %datanetworks%queue_vec.png
                                         }
                                     Parameters
                                         {
                                         MaxCapacity = Str; lar_switch_02.queueCapacity ; Queue Capacity in Bytes. (Use -1 for INF capacity)
                                         ForcedPeriod = Str; -1 ; Force minimum period to transition. Use -1 for INF
                                         Instances = Str; lar_switch_02.numberOfQueues ; 
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = WRRScheduler
                                     Ports = 2 ; 1
                                     Path = PhaseI/WRRScheduler.h
                                     Description = Atomic DEVS model
                                     Graphic
                                         {
                                         Position = -4530 ; -2505
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         numberOfQueues = Str; lar_switch_02.numberOfQueues ; 
                                         weights = Str; lar_switch_02.egressPort2.PriorityQueue.WRRScheduler.weights; vector<double> with the weights for each queue
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = Vect2Scal
                                     Ports = 1 ; 1
                                     Path = vector/Vector2Scalar.h
                                     Description = Vector to scalar signal
                                     Graphic
                                         {
                                         Position = -5505 ; -4080
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %vectors%vec2scalar.svg
                                         }
                                     Parameters
                                         {
                                         Index = Str; -1 ; Signal Index
                                         }
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -8025 ; -8025 ; -7365
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -9975 ; -9975 ; -8940
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; 0
                                     Sink = Cmp ;  3 ;  1 ; -1
                                     PointX = -6450 ; -6450 ; -4665
                                     PointY = -2325 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Prt ;  3 ;  1 ; 0
                                     Sink = Cmp ;  3 ;  2 ; -1
                                     PointX = -5250 ; -5025 ; -5025 ; -4665
                                     PointY = -525 ; -525 ; -2025 ; -2025
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  3 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  2 ; -1
                                     PointX = -3750 ; -3300 ; -3300 ; -7500 ; -7500 ; -7365
                                     PointY = -2175 ; -2175 ; -1275 ; -1275 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -4725 ; -4725 ; -4140
                                     PointY = -3750 ; -3750 ; -3750
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; -1
                                     Sink = Cmp ;  2 ;  1 ; 0
                                     PointX = -5640 ; -6075 ; -6075 ; -6450
                                     PointY = -3750 ; -3750 ; -2625 ; -2625
                                     }
                                 }
                             }
                                 Point
                                     {
                                     ConectedLines = 1 ; 4 ; 5
                                     ConectedExtrems = Org ; Org ; Org
                                     Position = -3675 ; 150
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -150 ; -150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -4200 ; -3900 ; -3900
                                     PointY = -3525 ; -3525 ; -2940
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -1875 ; -1875 ; -1065
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; -1
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3450 ; -3450 ; -2775 ; -2775 ; -3675
                                     PointY = -2940 ; -3300 ; -3300 ; 150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Pnt ;  1 ; -1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -1965
                                     PointY = 150 ; 600 ; 600
                                     }
                         }
                     }
               Coupled
                     {
                     Type = Coordinator
                     Name = egressPort3
                     Ports = 1; 1
                     Description = Coupled DEVS model
                     Graphic
                         {
                         Position = -1110; -1860
                         Dimension = 1170; 870
                         Direction = Down
                         Color = 15
                         Icon = %datanetworks%priorityegressport.jpg
                         Window = 5000; 5000; 5000; 5000
                         }
                     Parameters
                         {
                         }
                     System
                         {
                         Inport
                             {
                             Name = Inport0
                             CoupledPort = 1
                             Description = Inport
                             Graphic
                                 {
                                 Position = -4695 ; -3525
                                 Dimension = 390
                                 Direction = Right
                                 }
                             }
                         Outport
                             {
                             Name = Outport0
                             CoupledPort = 1
                             Description = Outport
                             Graphic
                                 {
                                 Position = -1785 ; 600
                                 Dimension = 435
                                 Direction = Right
                                 }
                             }
                         Atomic
                             {
                             Name = Link
                             Ports = 1 ; 1
                             Path = PhaseI/Link.h
                             Description = Vector to scalar signal
                             Graphic
                                 {
                                 Position = -3990 ; -915
                                 Dimension = 630 ; 630
                                 Direction = Down
                                 Color = 15
                                 Icon = %vectors%vec2scalar.svg
                                 }
                             Parameters
                                 {
                                 link.capacity = Str; lar_switch_02.egressPort3.link.capacity ; Signal Index
                                 link.delay = Str; lar_switch_02.egressPort3.link.delay ; 
                                 }
                             }
                         Coupled
                             {
                             Type = Coordinator
                             Name = PriorityQueue
                             Ports = 2; 1
                             Description = Coupled DEVS model
                             Graphic
                                 {
                                 Position = -4080; -2895
                                 Dimension = 810; 990
                                 Direction = Down
                                 Color = 15
                                 Icon = %datanetworks%priorityqueue.jpg
                                 Window = 5000; 5000; 5000; 5000
                                 }
                             Parameters
                                 {
                                 }
                             System
                                 {
                                 Inport
                                     {
                                     Name = inPackets
                                     CoupledPort = 1
                                     Description = inportinpackets
                                     Graphic
                                         {
                                         Position = -10710 ; -2625
                                         Dimension = 570
                                         Direction = Right
                                         }
                                     }
                                 Outport
                                     {
                                     Name = outPackets
                                     CoupledPort = 1
                                     Description = outportoutpackets
                                     Graphic
                                         {
                                         Position = -3990 ; -3750
                                         Dimension = 630
                                         Direction = Right
                                         }
                                     }
                                 Inport
                                     {
                                     Name = inDequeReq
                                     CoupledPort = 2
                                     Description = inportindequereq
                                     Graphic
                                         {
                                         Position = -5880 ; -525
                                         Dimension = 525
                                         Direction = Right
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = prioritySelect
                                     Ports = 1 ; 1
                                     Path = PhaseI/PacketPrioritySelect.h
                                     Description = Receives packets, and based on their flowId it selects which output port to send it through
                                     Graphic
                                         {
                                         Position = -8805 ; -2985
                                         Dimension = 675 ; 720
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = VQueues
                                     Ports = 2 ; 2
                                     Path = PhaseI/Vector_NetworkQueueWithSizeOutput.h
                                     Description = In0 Incomming packets to queue\nIn1 Incoming signal to request dequeue\nOut0 Outgoing dequeued packets\nOut1 Outgoing queue lenght information\n\nQueues incoming packets and enqueues them as required by a\nexternal entity. FIFO Policy (FirstInFirstOut). Provides information\nits internal state.
                                     Graphic
                                         {
                                         Position = -7200 ; -2805
                                         Dimension = 600 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %datanetworks%queue_vec.png
                                         }
                                     Parameters
                                         {
                                         MaxCapacity = Str; lar_switch_02.queueCapacity ; Queue Capacity in Bytes. (Use -1 for INF capacity)
                                         ForcedPeriod = Str; -1 ; Force minimum period to transition. Use -1 for INF
                                         Instances = Str; lar_switch_02.numberOfQueues ; 
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = WRRScheduler
                                     Ports = 2 ; 1
                                     Path = PhaseI/WRRScheduler.h
                                     Description = Atomic DEVS model
                                     Graphic
                                         {
                                         Position = -4530 ; -2505
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         numberOfQueues = Str; lar_switch_02.numberOfQueues ; 
                                         weights = Str; lar_switch_02.egressPort3.PriorityQueue.WRRScheduler.weights; vector<double> with the weights for each queue
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = Vect2Scal
                                     Ports = 1 ; 1
                                     Path = vector/Vector2Scalar.h
                                     Description = Vector to scalar signal
                                     Graphic
                                         {
                                         Position = -5505 ; -4080
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %vectors%vec2scalar.svg
                                         }
                                     Parameters
                                         {
                                         Index = Str; -1 ; Signal Index
                                         }
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -8025 ; -8025 ; -7365
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -9975 ; -9975 ; -8940
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; 0
                                     Sink = Cmp ;  3 ;  1 ; -1
                                     PointX = -6450 ; -6450 ; -4665
                                     PointY = -2325 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Prt ;  3 ;  1 ; 0
                                     Sink = Cmp ;  3 ;  2 ; -1
                                     PointX = -5250 ; -5025 ; -5025 ; -4665
                                     PointY = -525 ; -525 ; -2025 ; -2025
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  3 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  2 ; -1
                                     PointX = -3750 ; -3300 ; -3300 ; -7500 ; -7500 ; -7365
                                     PointY = -2175 ; -2175 ; -1275 ; -1275 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -4725 ; -4725 ; -4140
                                     PointY = -3750 ; -3750 ; -3750
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; -1
                                     Sink = Cmp ;  2 ;  1 ; 0
                                     PointX = -5640 ; -6075 ; -6075 ; -6450
                                     PointY = -3750 ; -3750 ; -2625 ; -2625
                                     }
                                 }
                             }
                                 Point
                                     {
                                     ConectedLines = 1 ; 4 ; 5
                                     ConectedExtrems = Org ; Org ; Org
                                     Position = -3675 ; 150
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -150 ; -150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -4200 ; -3900 ; -3900
                                     PointY = -3525 ; -3525 ; -2940
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -1875 ; -1875 ; -1065
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; -1
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3450 ; -3450 ; -2775 ; -2775 ; -3675
                                     PointY = -2940 ; -3300 ; -3300 ; 150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Pnt ;  1 ; -1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -1965
                                     PointY = 150 ; 600 ; 600
                                     }
                         }
                     }
               Outport
                     {
                     Name = Outport1
                     CoupledPort = 1
                     Description = Outport
                     Graphic
                        {
                        Position = -5000 ; 2175
                        Dimension = 600
                        Direction = Right
                        }
                     }
               Outport
                     {
                     Name = Outport2
                     CoupledPort = 2
                     Description = Outport
                     Graphic
                        {
                        Position = -4000 ; 2175
                        Dimension = 600
                        Direction = Right
                        }
                     }
               Outport
                     {
                     Name = Outport3
                     CoupledPort = 3
                     Description = Outport
                     Graphic
                        {
                        Position = -3000 ; 2175
                        Dimension = 600
                        Direction = Right
                        }
                     }
               Outport
                     {
                     Name = Outport4
                     CoupledPort = 4
                     Description = Outport
                     Graphic
                        {
                        Position = -2000 ; 2175
                        Dimension = 600
                        Direction = Right
                        }
                     }
Line
            {
            Source = Prt ;  1 ;  1 ; 0
            Sink = Cmp ; 1  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Prt ;  2 ;  1 ; 0
            Sink = Cmp ; 1  ;  2 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Prt ;  3 ;  1 ; 0
            Sink = Cmp ; 1  ;  3 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Prt ;  4 ;  1 ; 0
            Sink = Cmp ; 1  ;  4 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  1 ;  1 ; 0
            Sink = Cmp ; 2  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  1 ;  2 ; 0
            Sink = Cmp ; 3  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  1 ;  3 ; 0
            Sink = Cmp ; 4  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  1 ;  4 ; 0
            Sink = Cmp ; 5  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  2 ;  1 ; 0
            Sink = Prt ; 5  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  3 ;  1 ; 0
            Sink = Prt ; 6  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  4 ;  1 ; 0
            Sink = Prt ; 7  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  5 ;  1 ; 0
            Sink = Prt ; 8  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
               }
              }
           Coupled
              {
              Type = Coordinator
              Name = felix_core_01
              Ports = 2; 2
              Description = Coupled DEVS model
              Graphic
                  {
                  Position = -11455 ; -7910
                  Dimension = 660; 1470
                  Direction = Down
                  Color = 15
                  Icon = %datanetworks%switch.jpg
                  Window = 5000; 5000; 5000; 5000
                  }
              Parameters
                  {
                  }
              System
                  {
                            Inport
                      {
                      Name = Inport0
                      CoupledPort = 1
                      Description = Inport
                      Graphic
                          {
                          Position = -4999  ; -6525
                          Dimension = 600
                          Direction = Right
                          }
                      }
                    Inport
                      {
                      Name = Inport1
                      CoupledPort = 2
                      Description = Inport
                      Graphic
                          {
                          Position = -3999  ; -6525
                          Dimension = 600
                          Direction = Right
                          }
                      }
               Atomic
                      {
                      Name = Routing
                      Ports = 2 ; 2
                      Path = PhaseI/Router.h
                      Description = InN: Incomming packets\nInN: Outgoing packets \n This model routes incoming packets to outports. The decision is based on the global table GlobalFlowBasedRoutingTable(flowId, routerName). If there are more than one possible outport, the model uses a routingPolicy (currently hardcoded to Round-Robin) to decide.
                      Graphic
                          {
                          Position = -3600 ; -4155
                          Dimension = 615 ; 1785
                          Direction = Down
                          Color = 15
                          Icon = %datanetworks%router.jpg
                          }
                      Parameters
                          {
                          }
                      }
               Coupled
                     {
                     Type = Coordinator
                     Name = egressPort0
                     Ports = 1; 1
                     Description = Coupled DEVS model
                     Graphic
                         {
                         Position = -4710; -1860
                         Dimension = 1170; 870
                         Direction = Down
                         Color = 15
                         Icon = %datanetworks%priorityegressport.jpg
                         Window = 5000; 5000; 5000; 5000
                         }
                     Parameters
                         {
                         }
                     System
                         {
                         Inport
                             {
                             Name = Inport0
                             CoupledPort = 1
                             Description = Inport
                             Graphic
                                 {
                                 Position = -4695 ; -3525
                                 Dimension = 390
                                 Direction = Right
                                 }
                             }
                         Outport
                             {
                             Name = Outport0
                             CoupledPort = 1
                             Description = Outport
                             Graphic
                                 {
                                 Position = -1785 ; 600
                                 Dimension = 435
                                 Direction = Right
                                 }
                             }
                         Atomic
                             {
                             Name = Link
                             Ports = 1 ; 1
                             Path = PhaseI/Link.h
                             Description = Vector to scalar signal
                             Graphic
                                 {
                                 Position = -3990 ; -915
                                 Dimension = 630 ; 630
                                 Direction = Down
                                 Color = 15
                                 Icon = %vectors%vec2scalar.svg
                                 }
                             Parameters
                                 {
                                 link.capacity = Str; felix_core_01.egressPort0.link.capacity ; Signal Index
                                 link.delay = Str; felix_core_01.egressPort0.link.delay ; 
                                 }
                             }
                         Coupled
                             {
                             Type = Coordinator
                             Name = PriorityQueue
                             Ports = 2; 1
                             Description = Coupled DEVS model
                             Graphic
                                 {
                                 Position = -4080; -2895
                                 Dimension = 810; 990
                                 Direction = Down
                                 Color = 15
                                 Icon = %datanetworks%priorityqueue.jpg
                                 Window = 5000; 5000; 5000; 5000
                                 }
                             Parameters
                                 {
                                 }
                             System
                                 {
                                 Inport
                                     {
                                     Name = inPackets
                                     CoupledPort = 1
                                     Description = inportinpackets
                                     Graphic
                                         {
                                         Position = -10710 ; -2625
                                         Dimension = 570
                                         Direction = Right
                                         }
                                     }
                                 Outport
                                     {
                                     Name = outPackets
                                     CoupledPort = 1
                                     Description = outportoutpackets
                                     Graphic
                                         {
                                         Position = -3990 ; -3750
                                         Dimension = 630
                                         Direction = Right
                                         }
                                     }
                                 Inport
                                     {
                                     Name = inDequeReq
                                     CoupledPort = 2
                                     Description = inportindequereq
                                     Graphic
                                         {
                                         Position = -5880 ; -525
                                         Dimension = 525
                                         Direction = Right
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = prioritySelect
                                     Ports = 1 ; 1
                                     Path = PhaseI/PacketPrioritySelect.h
                                     Description = Receives packets, and based on their flowId it selects which output port to send it through
                                     Graphic
                                         {
                                         Position = -8805 ; -2985
                                         Dimension = 675 ; 720
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = VQueues
                                     Ports = 2 ; 2
                                     Path = PhaseI/Vector_NetworkQueueWithSizeOutput.h
                                     Description = In0 Incomming packets to queue\nIn1 Incoming signal to request dequeue\nOut0 Outgoing dequeued packets\nOut1 Outgoing queue lenght information\n\nQueues incoming packets and enqueues them as required by a\nexternal entity. FIFO Policy (FirstInFirstOut). Provides information\nits internal state.
                                     Graphic
                                         {
                                         Position = -7200 ; -2805
                                         Dimension = 600 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %datanetworks%queue_vec.png
                                         }
                                     Parameters
                                         {
                                         MaxCapacity = Str; felix_core_01.queueCapacity ; Queue Capacity in Bytes. (Use -1 for INF capacity)
                                         ForcedPeriod = Str; -1 ; Force minimum period to transition. Use -1 for INF
                                         Instances = Str; felix_core_01.numberOfQueues ; 
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = WRRScheduler
                                     Ports = 2 ; 1
                                     Path = PhaseI/WRRScheduler.h
                                     Description = Atomic DEVS model
                                     Graphic
                                         {
                                         Position = -4530 ; -2505
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         numberOfQueues = Str; felix_core_01.numberOfQueues ; 
                                         weights = Str; felix_core_01.egressPort0.PriorityQueue.WRRScheduler.weights; vector<double> with the weights for each queue
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = Vect2Scal
                                     Ports = 1 ; 1
                                     Path = vector/Vector2Scalar.h
                                     Description = Vector to scalar signal
                                     Graphic
                                         {
                                         Position = -5505 ; -4080
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %vectors%vec2scalar.svg
                                         }
                                     Parameters
                                         {
                                         Index = Str; -1 ; Signal Index
                                         }
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -8025 ; -8025 ; -7365
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -9975 ; -9975 ; -8940
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; 0
                                     Sink = Cmp ;  3 ;  1 ; -1
                                     PointX = -6450 ; -6450 ; -4665
                                     PointY = -2325 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Prt ;  3 ;  1 ; 0
                                     Sink = Cmp ;  3 ;  2 ; -1
                                     PointX = -5250 ; -5025 ; -5025 ; -4665
                                     PointY = -525 ; -525 ; -2025 ; -2025
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  3 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  2 ; -1
                                     PointX = -3750 ; -3300 ; -3300 ; -7500 ; -7500 ; -7365
                                     PointY = -2175 ; -2175 ; -1275 ; -1275 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -4725 ; -4725 ; -4140
                                     PointY = -3750 ; -3750 ; -3750
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; -1
                                     Sink = Cmp ;  2 ;  1 ; 0
                                     PointX = -5640 ; -6075 ; -6075 ; -6450
                                     PointY = -3750 ; -3750 ; -2625 ; -2625
                                     }
                                 }
                             }
                                 Point
                                     {
                                     ConectedLines = 1 ; 4 ; 5
                                     ConectedExtrems = Org ; Org ; Org
                                     Position = -3675 ; 150
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -150 ; -150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -4200 ; -3900 ; -3900
                                     PointY = -3525 ; -3525 ; -2940
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -1875 ; -1875 ; -1065
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; -1
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3450 ; -3450 ; -2775 ; -2775 ; -3675
                                     PointY = -2940 ; -3300 ; -3300 ; 150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Pnt ;  1 ; -1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -1965
                                     PointY = 150 ; 600 ; 600
                                     }
                         }
                     }
               Coupled
                     {
                     Type = Coordinator
                     Name = egressPort1
                     Ports = 1; 1
                     Description = Coupled DEVS model
                     Graphic
                         {
                         Position = -3510; -1860
                         Dimension = 1170; 870
                         Direction = Down
                         Color = 15
                         Icon = %datanetworks%priorityegressport.jpg
                         Window = 5000; 5000; 5000; 5000
                         }
                     Parameters
                         {
                         }
                     System
                         {
                         Inport
                             {
                             Name = Inport0
                             CoupledPort = 1
                             Description = Inport
                             Graphic
                                 {
                                 Position = -4695 ; -3525
                                 Dimension = 390
                                 Direction = Right
                                 }
                             }
                         Outport
                             {
                             Name = Outport0
                             CoupledPort = 1
                             Description = Outport
                             Graphic
                                 {
                                 Position = -1785 ; 600
                                 Dimension = 435
                                 Direction = Right
                                 }
                             }
                         Atomic
                             {
                             Name = Link
                             Ports = 1 ; 1
                             Path = PhaseI/Link.h
                             Description = Vector to scalar signal
                             Graphic
                                 {
                                 Position = -3990 ; -915
                                 Dimension = 630 ; 630
                                 Direction = Down
                                 Color = 15
                                 Icon = %vectors%vec2scalar.svg
                                 }
                             Parameters
                                 {
                                 link.capacity = Str; felix_core_01.egressPort1.link.capacity ; Signal Index
                                 link.delay = Str; felix_core_01.egressPort1.link.delay ; 
                                 }
                             }
                         Coupled
                             {
                             Type = Coordinator
                             Name = PriorityQueue
                             Ports = 2; 1
                             Description = Coupled DEVS model
                             Graphic
                                 {
                                 Position = -4080; -2895
                                 Dimension = 810; 990
                                 Direction = Down
                                 Color = 15
                                 Icon = %datanetworks%priorityqueue.jpg
                                 Window = 5000; 5000; 5000; 5000
                                 }
                             Parameters
                                 {
                                 }
                             System
                                 {
                                 Inport
                                     {
                                     Name = inPackets
                                     CoupledPort = 1
                                     Description = inportinpackets
                                     Graphic
                                         {
                                         Position = -10710 ; -2625
                                         Dimension = 570
                                         Direction = Right
                                         }
                                     }
                                 Outport
                                     {
                                     Name = outPackets
                                     CoupledPort = 1
                                     Description = outportoutpackets
                                     Graphic
                                         {
                                         Position = -3990 ; -3750
                                         Dimension = 630
                                         Direction = Right
                                         }
                                     }
                                 Inport
                                     {
                                     Name = inDequeReq
                                     CoupledPort = 2
                                     Description = inportindequereq
                                     Graphic
                                         {
                                         Position = -5880 ; -525
                                         Dimension = 525
                                         Direction = Right
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = prioritySelect
                                     Ports = 1 ; 1
                                     Path = PhaseI/PacketPrioritySelect.h
                                     Description = Receives packets, and based on their flowId it selects which output port to send it through
                                     Graphic
                                         {
                                         Position = -8805 ; -2985
                                         Dimension = 675 ; 720
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = VQueues
                                     Ports = 2 ; 2
                                     Path = PhaseI/Vector_NetworkQueueWithSizeOutput.h
                                     Description = In0 Incomming packets to queue\nIn1 Incoming signal to request dequeue\nOut0 Outgoing dequeued packets\nOut1 Outgoing queue lenght information\n\nQueues incoming packets and enqueues them as required by a\nexternal entity. FIFO Policy (FirstInFirstOut). Provides information\nits internal state.
                                     Graphic
                                         {
                                         Position = -7200 ; -2805
                                         Dimension = 600 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %datanetworks%queue_vec.png
                                         }
                                     Parameters
                                         {
                                         MaxCapacity = Str; felix_core_01.queueCapacity ; Queue Capacity in Bytes. (Use -1 for INF capacity)
                                         ForcedPeriod = Str; -1 ; Force minimum period to transition. Use -1 for INF
                                         Instances = Str; felix_core_01.numberOfQueues ; 
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = WRRScheduler
                                     Ports = 2 ; 1
                                     Path = PhaseI/WRRScheduler.h
                                     Description = Atomic DEVS model
                                     Graphic
                                         {
                                         Position = -4530 ; -2505
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         numberOfQueues = Str; felix_core_01.numberOfQueues ; 
                                         weights = Str; felix_core_01.egressPort1.PriorityQueue.WRRScheduler.weights; vector<double> with the weights for each queue
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = Vect2Scal
                                     Ports = 1 ; 1
                                     Path = vector/Vector2Scalar.h
                                     Description = Vector to scalar signal
                                     Graphic
                                         {
                                         Position = -5505 ; -4080
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %vectors%vec2scalar.svg
                                         }
                                     Parameters
                                         {
                                         Index = Str; -1 ; Signal Index
                                         }
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -8025 ; -8025 ; -7365
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -9975 ; -9975 ; -8940
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; 0
                                     Sink = Cmp ;  3 ;  1 ; -1
                                     PointX = -6450 ; -6450 ; -4665
                                     PointY = -2325 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Prt ;  3 ;  1 ; 0
                                     Sink = Cmp ;  3 ;  2 ; -1
                                     PointX = -5250 ; -5025 ; -5025 ; -4665
                                     PointY = -525 ; -525 ; -2025 ; -2025
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  3 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  2 ; -1
                                     PointX = -3750 ; -3300 ; -3300 ; -7500 ; -7500 ; -7365
                                     PointY = -2175 ; -2175 ; -1275 ; -1275 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -4725 ; -4725 ; -4140
                                     PointY = -3750 ; -3750 ; -3750
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; -1
                                     Sink = Cmp ;  2 ;  1 ; 0
                                     PointX = -5640 ; -6075 ; -6075 ; -6450
                                     PointY = -3750 ; -3750 ; -2625 ; -2625
                                     }
                                 }
                             }
                                 Point
                                     {
                                     ConectedLines = 1 ; 4 ; 5
                                     ConectedExtrems = Org ; Org ; Org
                                     Position = -3675 ; 150
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -150 ; -150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -4200 ; -3900 ; -3900
                                     PointY = -3525 ; -3525 ; -2940
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -1875 ; -1875 ; -1065
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; -1
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3450 ; -3450 ; -2775 ; -2775 ; -3675
                                     PointY = -2940 ; -3300 ; -3300 ; 150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Pnt ;  1 ; -1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -1965
                                     PointY = 150 ; 600 ; 600
                                     }
                         }
                     }
               Outport
                     {
                     Name = Outport1
                     CoupledPort = 1
                     Description = Outport
                     Graphic
                        {
                        Position = -5000 ; 2175
                        Dimension = 600
                        Direction = Right
                        }
                     }
               Outport
                     {
                     Name = Outport2
                     CoupledPort = 2
                     Description = Outport
                     Graphic
                        {
                        Position = -4000 ; 2175
                        Dimension = 600
                        Direction = Right
                        }
                     }
Line
            {
            Source = Prt ;  1 ;  1 ; 0
            Sink = Cmp ; 1  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Prt ;  2 ;  1 ; 0
            Sink = Cmp ; 1  ;  2 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  1 ;  1 ; 0
            Sink = Cmp ; 2  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  1 ;  2 ; 0
            Sink = Cmp ; 3  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  2 ;  1 ; 0
            Sink = Prt ; 3  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  3 ;  1 ; 0
            Sink = Prt ; 4  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
               }
              }
           Coupled
              {
              Type = Coordinator
              Name = felix_core_02
              Ports = 2; 2
              Description = Coupled DEVS model
              Graphic
                  {
                  Position = -9455 ; -6310
                  Dimension = 660; 1470
                  Direction = Down
                  Color = 15
                  Icon = %datanetworks%switch.jpg
                  Window = 5000; 5000; 5000; 5000
                  }
              Parameters
                  {
                  }
              System
                  {
                            Inport
                      {
                      Name = Inport0
                      CoupledPort = 1
                      Description = Inport
                      Graphic
                          {
                          Position = -4999  ; -6525
                          Dimension = 600
                          Direction = Right
                          }
                      }
                    Inport
                      {
                      Name = Inport1
                      CoupledPort = 2
                      Description = Inport
                      Graphic
                          {
                          Position = -3999  ; -6525
                          Dimension = 600
                          Direction = Right
                          }
                      }
               Atomic
                      {
                      Name = Routing
                      Ports = 2 ; 2
                      Path = PhaseI/Router.h
                      Description = InN: Incomming packets\nInN: Outgoing packets \n This model routes incoming packets to outports. The decision is based on the global table GlobalFlowBasedRoutingTable(flowId, routerName). If there are more than one possible outport, the model uses a routingPolicy (currently hardcoded to Round-Robin) to decide.
                      Graphic
                          {
                          Position = -3600 ; -4155
                          Dimension = 615 ; 1785
                          Direction = Down
                          Color = 15
                          Icon = %datanetworks%router.jpg
                          }
                      Parameters
                          {
                          }
                      }
               Coupled
                     {
                     Type = Coordinator
                     Name = egressPort0
                     Ports = 1; 1
                     Description = Coupled DEVS model
                     Graphic
                         {
                         Position = -4710; -1860
                         Dimension = 1170; 870
                         Direction = Down
                         Color = 15
                         Icon = %datanetworks%priorityegressport.jpg
                         Window = 5000; 5000; 5000; 5000
                         }
                     Parameters
                         {
                         }
                     System
                         {
                         Inport
                             {
                             Name = Inport0
                             CoupledPort = 1
                             Description = Inport
                             Graphic
                                 {
                                 Position = -4695 ; -3525
                                 Dimension = 390
                                 Direction = Right
                                 }
                             }
                         Outport
                             {
                             Name = Outport0
                             CoupledPort = 1
                             Description = Outport
                             Graphic
                                 {
                                 Position = -1785 ; 600
                                 Dimension = 435
                                 Direction = Right
                                 }
                             }
                         Atomic
                             {
                             Name = Link
                             Ports = 1 ; 1
                             Path = PhaseI/Link.h
                             Description = Vector to scalar signal
                             Graphic
                                 {
                                 Position = -3990 ; -915
                                 Dimension = 630 ; 630
                                 Direction = Down
                                 Color = 15
                                 Icon = %vectors%vec2scalar.svg
                                 }
                             Parameters
                                 {
                                 link.capacity = Str; felix_core_02.egressPort0.link.capacity ; Signal Index
                                 link.delay = Str; felix_core_02.egressPort0.link.delay ; 
                                 }
                             }
                         Coupled
                             {
                             Type = Coordinator
                             Name = PriorityQueue
                             Ports = 2; 1
                             Description = Coupled DEVS model
                             Graphic
                                 {
                                 Position = -4080; -2895
                                 Dimension = 810; 990
                                 Direction = Down
                                 Color = 15
                                 Icon = %datanetworks%priorityqueue.jpg
                                 Window = 5000; 5000; 5000; 5000
                                 }
                             Parameters
                                 {
                                 }
                             System
                                 {
                                 Inport
                                     {
                                     Name = inPackets
                                     CoupledPort = 1
                                     Description = inportinpackets
                                     Graphic
                                         {
                                         Position = -10710 ; -2625
                                         Dimension = 570
                                         Direction = Right
                                         }
                                     }
                                 Outport
                                     {
                                     Name = outPackets
                                     CoupledPort = 1
                                     Description = outportoutpackets
                                     Graphic
                                         {
                                         Position = -3990 ; -3750
                                         Dimension = 630
                                         Direction = Right
                                         }
                                     }
                                 Inport
                                     {
                                     Name = inDequeReq
                                     CoupledPort = 2
                                     Description = inportindequereq
                                     Graphic
                                         {
                                         Position = -5880 ; -525
                                         Dimension = 525
                                         Direction = Right
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = prioritySelect
                                     Ports = 1 ; 1
                                     Path = PhaseI/PacketPrioritySelect.h
                                     Description = Receives packets, and based on their flowId it selects which output port to send it through
                                     Graphic
                                         {
                                         Position = -8805 ; -2985
                                         Dimension = 675 ; 720
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = VQueues
                                     Ports = 2 ; 2
                                     Path = PhaseI/Vector_NetworkQueueWithSizeOutput.h
                                     Description = In0 Incomming packets to queue\nIn1 Incoming signal to request dequeue\nOut0 Outgoing dequeued packets\nOut1 Outgoing queue lenght information\n\nQueues incoming packets and enqueues them as required by a\nexternal entity. FIFO Policy (FirstInFirstOut). Provides information\nits internal state.
                                     Graphic
                                         {
                                         Position = -7200 ; -2805
                                         Dimension = 600 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %datanetworks%queue_vec.png
                                         }
                                     Parameters
                                         {
                                         MaxCapacity = Str; felix_core_02.queueCapacity ; Queue Capacity in Bytes. (Use -1 for INF capacity)
                                         ForcedPeriod = Str; -1 ; Force minimum period to transition. Use -1 for INF
                                         Instances = Str; felix_core_02.numberOfQueues ; 
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = WRRScheduler
                                     Ports = 2 ; 1
                                     Path = PhaseI/WRRScheduler.h
                                     Description = Atomic DEVS model
                                     Graphic
                                         {
                                         Position = -4530 ; -2505
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         numberOfQueues = Str; felix_core_02.numberOfQueues ; 
                                         weights = Str; felix_core_02.egressPort0.PriorityQueue.WRRScheduler.weights; vector<double> with the weights for each queue
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = Vect2Scal
                                     Ports = 1 ; 1
                                     Path = vector/Vector2Scalar.h
                                     Description = Vector to scalar signal
                                     Graphic
                                         {
                                         Position = -5505 ; -4080
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %vectors%vec2scalar.svg
                                         }
                                     Parameters
                                         {
                                         Index = Str; -1 ; Signal Index
                                         }
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -8025 ; -8025 ; -7365
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -9975 ; -9975 ; -8940
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; 0
                                     Sink = Cmp ;  3 ;  1 ; -1
                                     PointX = -6450 ; -6450 ; -4665
                                     PointY = -2325 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Prt ;  3 ;  1 ; 0
                                     Sink = Cmp ;  3 ;  2 ; -1
                                     PointX = -5250 ; -5025 ; -5025 ; -4665
                                     PointY = -525 ; -525 ; -2025 ; -2025
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  3 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  2 ; -1
                                     PointX = -3750 ; -3300 ; -3300 ; -7500 ; -7500 ; -7365
                                     PointY = -2175 ; -2175 ; -1275 ; -1275 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -4725 ; -4725 ; -4140
                                     PointY = -3750 ; -3750 ; -3750
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; -1
                                     Sink = Cmp ;  2 ;  1 ; 0
                                     PointX = -5640 ; -6075 ; -6075 ; -6450
                                     PointY = -3750 ; -3750 ; -2625 ; -2625
                                     }
                                 }
                             }
                                 Point
                                     {
                                     ConectedLines = 1 ; 4 ; 5
                                     ConectedExtrems = Org ; Org ; Org
                                     Position = -3675 ; 150
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -150 ; -150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -4200 ; -3900 ; -3900
                                     PointY = -3525 ; -3525 ; -2940
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -1875 ; -1875 ; -1065
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; -1
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3450 ; -3450 ; -2775 ; -2775 ; -3675
                                     PointY = -2940 ; -3300 ; -3300 ; 150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Pnt ;  1 ; -1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -1965
                                     PointY = 150 ; 600 ; 600
                                     }
                         }
                     }
               Coupled
                     {
                     Type = Coordinator
                     Name = egressPort1
                     Ports = 1; 1
                     Description = Coupled DEVS model
                     Graphic
                         {
                         Position = -3510; -1860
                         Dimension = 1170; 870
                         Direction = Down
                         Color = 15
                         Icon = %datanetworks%priorityegressport.jpg
                         Window = 5000; 5000; 5000; 5000
                         }
                     Parameters
                         {
                         }
                     System
                         {
                         Inport
                             {
                             Name = Inport0
                             CoupledPort = 1
                             Description = Inport
                             Graphic
                                 {
                                 Position = -4695 ; -3525
                                 Dimension = 390
                                 Direction = Right
                                 }
                             }
                         Outport
                             {
                             Name = Outport0
                             CoupledPort = 1
                             Description = Outport
                             Graphic
                                 {
                                 Position = -1785 ; 600
                                 Dimension = 435
                                 Direction = Right
                                 }
                             }
                         Atomic
                             {
                             Name = Link
                             Ports = 1 ; 1
                             Path = PhaseI/Link.h
                             Description = Vector to scalar signal
                             Graphic
                                 {
                                 Position = -3990 ; -915
                                 Dimension = 630 ; 630
                                 Direction = Down
                                 Color = 15
                                 Icon = %vectors%vec2scalar.svg
                                 }
                             Parameters
                                 {
                                 link.capacity = Str; felix_core_02.egressPort1.link.capacity ; Signal Index
                                 link.delay = Str; felix_core_02.egressPort1.link.delay ; 
                                 }
                             }
                         Coupled
                             {
                             Type = Coordinator
                             Name = PriorityQueue
                             Ports = 2; 1
                             Description = Coupled DEVS model
                             Graphic
                                 {
                                 Position = -4080; -2895
                                 Dimension = 810; 990
                                 Direction = Down
                                 Color = 15
                                 Icon = %datanetworks%priorityqueue.jpg
                                 Window = 5000; 5000; 5000; 5000
                                 }
                             Parameters
                                 {
                                 }
                             System
                                 {
                                 Inport
                                     {
                                     Name = inPackets
                                     CoupledPort = 1
                                     Description = inportinpackets
                                     Graphic
                                         {
                                         Position = -10710 ; -2625
                                         Dimension = 570
                                         Direction = Right
                                         }
                                     }
                                 Outport
                                     {
                                     Name = outPackets
                                     CoupledPort = 1
                                     Description = outportoutpackets
                                     Graphic
                                         {
                                         Position = -3990 ; -3750
                                         Dimension = 630
                                         Direction = Right
                                         }
                                     }
                                 Inport
                                     {
                                     Name = inDequeReq
                                     CoupledPort = 2
                                     Description = inportindequereq
                                     Graphic
                                         {
                                         Position = -5880 ; -525
                                         Dimension = 525
                                         Direction = Right
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = prioritySelect
                                     Ports = 1 ; 1
                                     Path = PhaseI/PacketPrioritySelect.h
                                     Description = Receives packets, and based on their flowId it selects which output port to send it through
                                     Graphic
                                         {
                                         Position = -8805 ; -2985
                                         Dimension = 675 ; 720
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = VQueues
                                     Ports = 2 ; 2
                                     Path = PhaseI/Vector_NetworkQueueWithSizeOutput.h
                                     Description = In0 Incomming packets to queue\nIn1 Incoming signal to request dequeue\nOut0 Outgoing dequeued packets\nOut1 Outgoing queue lenght information\n\nQueues incoming packets and enqueues them as required by a\nexternal entity. FIFO Policy (FirstInFirstOut). Provides information\nits internal state.
                                     Graphic
                                         {
                                         Position = -7200 ; -2805
                                         Dimension = 600 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %datanetworks%queue_vec.png
                                         }
                                     Parameters
                                         {
                                         MaxCapacity = Str; felix_core_02.queueCapacity ; Queue Capacity in Bytes. (Use -1 for INF capacity)
                                         ForcedPeriod = Str; -1 ; Force minimum period to transition. Use -1 for INF
                                         Instances = Str; felix_core_02.numberOfQueues ; 
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = WRRScheduler
                                     Ports = 2 ; 1
                                     Path = PhaseI/WRRScheduler.h
                                     Description = Atomic DEVS model
                                     Graphic
                                         {
                                         Position = -4530 ; -2505
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = None
                                         }
                                     Parameters
                                         {
                                         numberOfQueues = Str; felix_core_02.numberOfQueues ; 
                                         weights = Str; felix_core_02.egressPort1.PriorityQueue.WRRScheduler.weights; vector<double> with the weights for each queue
                                         }
                                     }
                                 Atomic
                                     {
                                     Name = Vect2Scal
                                     Ports = 1 ; 1
                                     Path = vector/Vector2Scalar.h
                                     Description = Vector to scalar signal
                                     Graphic
                                         {
                                         Position = -5505 ; -4080
                                         Dimension = 675 ; 675
                                         Direction = Right
                                         Color = 15
                                         Icon = %vectors%vec2scalar.svg
                                         }
                                     Parameters
                                         {
                                         Index = Str; -1 ; Signal Index
                                         }
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -8025 ; -8025 ; -7365
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -9975 ; -9975 ; -8940
                                     PointY = -2625 ; -2625 ; -2625
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; 0
                                     Sink = Cmp ;  3 ;  1 ; -1
                                     PointX = -6450 ; -6450 ; -4665
                                     PointY = -2325 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Prt ;  3 ;  1 ; 0
                                     Sink = Cmp ;  3 ;  2 ; -1
                                     PointX = -5250 ; -5025 ; -5025 ; -4665
                                     PointY = -525 ; -525 ; -2025 ; -2025
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  3 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  2 ; -1
                                     PointX = -3750 ; -3300 ; -3300 ; -7500 ; -7500 ; -7365
                                     PointY = -2175 ; -2175 ; -1275 ; -1275 ; -2325 ; -2325
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -4725 ; -4725 ; -4140
                                     PointY = -3750 ; -3750 ; -3750
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  4 ;  1 ; -1
                                     Sink = Cmp ;  2 ;  1 ; 0
                                     PointX = -5640 ; -6075 ; -6075 ; -6450
                                     PointY = -3750 ; -3750 ; -2625 ; -2625
                                     }
                                 }
                             }
                                 Point
                                     {
                                     ConectedLines = 1 ; 4 ; 5
                                     ConectedExtrems = Org ; Org ; Org
                                     Position = -3675 ; 150
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  1 ;  1 ; 0
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -150 ; -150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Prt ;  1 ;  1 ; 0
                                     Sink = Cmp ;  2 ;  1 ; -1
                                     PointX = -4200 ; -3900 ; -3900
                                     PointY = -3525 ; -3525 ; -2940
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  1 ; 0
                                     Sink = Cmp ;  1 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -3675
                                     PointY = -1875 ; -1875 ; -1065
                                     }
                                 Line
                                     {
                                     Source = Cmp ;  2 ;  2 ; -1
                                     Sink = Pnt ;  1 ; -1 ; 0
                                     PointX = -3450 ; -3450 ; -2775 ; -2775 ; -3675
                                     PointY = -2940 ; -3300 ; -3300 ; 150 ; 150
                                     }
                                 Line
                                     {
                                     Source = Pnt ;  1 ; -1 ; 0
                                     Sink = Prt ;  2 ;  1 ; -1
                                     PointX = -3675 ; -3675 ; -1965
                                     PointY = 150 ; 600 ; 600
                                     }
                         }
                     }
               Outport
                     {
                     Name = Outport1
                     CoupledPort = 1
                     Description = Outport
                     Graphic
                        {
                        Position = -5000 ; 2175
                        Dimension = 600
                        Direction = Right
                        }
                     }
               Outport
                     {
                     Name = Outport2
                     CoupledPort = 2
                     Description = Outport
                     Graphic
                        {
                        Position = -4000 ; 2175
                        Dimension = 600
                        Direction = Right
                        }
                     }
Line
            {
            Source = Prt ;  1 ;  1 ; 0
            Sink = Cmp ; 1  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Prt ;  2 ;  1 ; 0
            Sink = Cmp ; 1  ;  2 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  1 ;  1 ; 0
            Sink = Cmp ; 2  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  1 ;  2 ; 0
            Sink = Cmp ; 3  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  2 ;  1 ; 0
            Sink = Prt ; 3  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
        Line
            {
            Source = Cmp ;  3 ;  1 ; 0
            Sink = Prt ; 4  ;  1 ; -1
            PointX = -11325 ; -11325 ; -9840
            PointY = -2625 ; -2625 ; -2625
            }
               }
              }
                Coupled
            {
            Type = Coordinator
            Name = lar_felix_0
            Ports = 0; 2
            Description = Coupled DEVS model
            Graphic
                {
                Position = -12395 ; -12375
                Dimension = 390; 1050
                Direction = Down
                Color = 15
                Icon = %datanetworks%server.jpg
                Window = 5000; 5000; 5000; 5000
                }
            Parameters
                {
                }
            System
                {
    Atomic
                        {
                        Name = GeneratorApplication
                        Ports = 0 ; 1
                        Path = PhaseI/FelixServer.h
                        Description = Generates jobs. Distribution for the rate and jobSize are retrieved from the Flows assigned to this server
                        Graphic
                            {
                            Position = -7740 ; -4365
                            Dimension = 630 ; 645
                            Direction = Down
                            Color = 15
                            Icon = %datanetworks%generator.png
                            }
                        Parameters
                            {
                            }
                        }
    Atomic
                        {
                        Name = Routing
                        Ports = 1 ; 2
                        Path = PhaseI/Router.h
                        Description = InN: Incomming packets\nInN: Outgoing packets \n This model routes incoming packets to outports. The decision is based on the global table GlobalFlowBasedRoutingTable(flowId, routerName). If there are more than one possible outport, the model uses a routingPolicy (currently hardcoded to Round-Robin) to decide.
                        Graphic
                            {
                            Position = -7740 ; -2115
                            Dimension = 615 ; 1785
                            Direction = Down
                            Color = 15
                            Icon = %datanetworks%router.jpg
                            }
                        Parameters
                            {
                            }
                        }
                        Outport
                        {
                        Name = Outport0
                        CoupledPort = 1
                        Description = 
                        Graphic
                            {
                            Position = -7000 ; 3600
                            Dimension = 555
                            Direction = Right
                            }
                        }
                        Coupled
                            {
                            Type = Coordinator
                            Name = egressPort0
                            Ports = 1; 1
                            Description = Coupled DEVS model
                            Graphic
                                {
                                Position = -7700; -120
                                Dimension = 990; 840
                                Direction = Down
                                Color = 15
                                Icon = %datanetworks%egressport.jpg
                                Window = 5000; 5000; 5000; 5000
                                }
                            Parameters
                                {
                                }
                            System
                                {
                                Inport
                                    {
                                    Name = Inport0
                                    CoupledPort = 1
                                    Description = 
                                    Graphic
                                        {
                                        Position = -4725 ; -3525
                                        Dimension = 450
                                        Direction = Right
                                        }
                                    }
                                Outport
                                    {
                                    Name = Outport0
                                    CoupledPort = 1
                                    Description = 
                                    Graphic
                                        {
                                        Position = -930 ; 1575
                                        Dimension = 525
                                        Direction = Right
                                        }
                                    }
                                Atomic
                                    {
                                    Name = portQueue
                                    Ports = 2 ; 2
                                    Path = PhaseI/NetworkQueue.h
                                    Description = In0 Incomming packets to queue\nIn1 Incoming signal to request dequeue\nOut0 Outgoing dequeued packets\nOut1 Outgoing queue lenght information\n\nQueues incoming packets and enqueues them as required by a\nexternal entity. FIFO Policy (FirstInFirstOut). Provides information\nits internal state.
                                    Graphic
                                        {
                                        Position = -3855 ; -2355
                                        Dimension = 675 ; 675
                                        Direction = Down
                                        Color = 15
                                        Icon = %datanetworks%queue.png
                                        }
                                    Parameters
                                        {
                                        MaxCapacity = Str; lar_felix_0.egressPort.queueCapacity ; Queue Capacity in Bytes. (Use -1 for INF capacity)
                                        ForcedPeriod = Str; -1 ; Force minimum period to transition. Use -1 for INF
                                        }
                                    }
                                Atomic
                                    {
                                    Name = Link
                                    Ports = 1 ; 1
                                    Path = PhaseI/Link.h
                                    Description = Vector to scalar signal
                                    Graphic
                                        {
                                        Position = -3990 ; -540
                                        Dimension = 630 ; 630
                                        Direction = Down
                                        Color = 15
                                        Icon = %vectors%vec2scalar.svg
                                        }
                                    Parameters
                                        {
                                        link.capacity = Str; lar_felix_0.egressPort0.link.capacity ; Signal Index
                                        link.delay = Str; lar_felix_0.egressPort0.link.delay ; 
                                        }
                                    }
                                Point
                                    {
                                    ConectedLines = 3 ; 4 ; 5
                                    ConectedExtrems = Org ; Org ; Org
                                    Position = -3705 ; 765
                                    }
                                Line
                                    {
                                    Source = Prt ;  1 ;  1 ; 0
                                    Sink = Cmp ;  1 ;  1 ; -1
                                    PointX = -4125 ; -3675 ; -3675
                                    PointY = -3525 ; -3525 ; -2490
                                    }
                                Line
                                    {
                                    Source = Cmp ;  1 ;  1 ; 0
                                    Sink = Cmp ;  2 ;  1 ; -1
                                    PointX = -3675 ; -3675 ; -3675
                                    PointY = -1575 ; -1575 ; -690
                                    }
                                Line
                                    {
                                    Source = Cmp ;  2 ;  1 ; 0
                                    Sink = Pnt ;  1 ; -1 ; 0
                                    PointX = -3675 ; -3705 ; -3705
                                    PointY = 225 ; 225 ; 765
                                    }
                                Line
                                    {
                                    Source = Cmp ;  1 ;  2 ; -1
                                    Sink = Pnt ;  1 ; -1 ; 0
                                    PointX = -3375 ; -3375 ; -2775 ; -2775 ; -3705
                                    PointY = -2490 ; -2775 ; -2775 ; 765 ; 765
                                    }
                                Line
                                    {
                                    Source = Pnt ;  1 ; -1 ; 0
                                    Sink = Prt ;  2 ;  1 ; -1
                                    PointX = -3705 ; -3705 ; -1065
                                    PointY = 765 ; 1575 ; 1575
                                    }
                                }
                            }
                        Outport
                        {
                        Name = Outport1
                        CoupledPort = 1
                        Description = 
                        Graphic
                            {
                            Position = -5000 ; 3600
                            Dimension = 555
                            Direction = Right
                            }
                        }
                        Coupled
                            {
                            Type = Coordinator
                            Name = egressPort1
                            Ports = 1; 1
                            Description = Coupled DEVS model
                            Graphic
                                {
                                Position = -5700; -120
                                Dimension = 990; 840
                                Direction = Down
                                Color = 15
                                Icon = %datanetworks%egressport.jpg
                                Window = 5000; 5000; 5000; 5000
                                }
                            Parameters
                                {
                                }
                            System
                                {
                                Inport
                                    {
                                    Name = Inport0
                                    CoupledPort = 1
                                    Description = 
                                    Graphic
                                        {
                                        Position = -4725 ; -3525
                                        Dimension = 450
                                        Direction = Right
                                        }
                                    }
                                Outport
                                    {
                                    Name = Outport0
                                    CoupledPort = 1
                                    Description = 
                                    Graphic
                                        {
                                        Position = -930 ; 1575
                                        Dimension = 525
                                        Direction = Right
                                        }
                                    }
                                Atomic
                                    {
                                    Name = portQueue
                                    Ports = 2 ; 2
                                    Path = PhaseI/NetworkQueue.h
                                    Description = In0 Incomming packets to queue\nIn1 Incoming signal to request dequeue\nOut0 Outgoing dequeued packets\nOut1 Outgoing queue lenght information\n\nQueues incoming packets and enqueues them as required by a\nexternal entity. FIFO Policy (FirstInFirstOut). Provides information\nits internal state.
                                    Graphic
                                        {
                                        Position = -3855 ; -2355
                                        Dimension = 675 ; 675
                                        Direction = Down
                                        Color = 15
                                        Icon = %datanetworks%queue.png
                                        }
                                    Parameters
                                        {
                                        MaxCapacity = Str; lar_felix_0.egressPort.queueCapacity ; Queue Capacity in Bytes. (Use -1 for INF capacity)
                                        ForcedPeriod = Str; -1 ; Force minimum period to transition. Use -1 for INF
                                        }
                                    }
                                Atomic
                                    {
                                    Name = Link
                                    Ports = 1 ; 1
                                    Path = PhaseI/Link.h
                                    Description = Vector to scalar signal
                                    Graphic
                                        {
                                        Position = -3990 ; -540
                                        Dimension = 630 ; 630
                                        Direction = Down
                                        Color = 15
                                        Icon = %vectors%vec2scalar.svg
                                        }
                                    Parameters
                                        {
                                        link.capacity = Str; lar_felix_0.egressPort1.link.capacity ; Signal Index
                                        link.delay = Str; lar_felix_0.egressPort1.link.delay ; 
                                        }
                                    }
                                Point
                                    {
                                    ConectedLines = 3 ; 4 ; 5
                                    ConectedExtrems = Org ; Org ; Org
                                    Position = -3705 ; 765
                                    }
                                Line
                                    {
                                    Source = Prt ;  1 ;  1 ; 0
                                    Sink = Cmp ;  1 ;  1 ; -1
                                    PointX = -4125 ; -3675 ; -3675
                                    PointY = -3525 ; -3525 ; -2490
                                    }
                                Line
                                    {
                                    Source = Cmp ;  1 ;  1 ; 0
                                    Sink = Cmp ;  2 ;  1 ; -1
                                    PointX = -3675 ; -3675 ; -3675
                                    PointY = -1575 ; -1575 ; -690
                                    }
                                Line
                                    {
                                    Source = Cmp ;  2 ;  1 ; 0
                                    Sink = Pnt ;  1 ; -1 ; 0
                                    PointX = -3675 ; -3705 ; -3705
                                    PointY = 225 ; 225 ; 765
                                    }
                                Line
                                    {
                                    Source = Cmp ;  1 ;  2 ; -1
                                    Sink = Pnt ;  1 ; -1 ; 0
                                    PointX = -3375 ; -3375 ; -2775 ; -2775 ; -3705
                                    PointY = -2490 ; -2775 ; -2775 ; 765 ; 765
                                    }
                                Line
                                    {
                                    Source = Pnt ;  1 ; -1 ; 0
                                    Sink = Prt ;  2 ;  1 ; -1
                                    PointX = -3705 ; -3705 ; -1065
                                    PointY = 765 ; 1575 ; 1575
                                    }
                                }
                            }  
                              Line
                                  {
                                  Source = Cmp ;  1 ;  1 ; 0
                                  Sink = Cmp ;  2 ;  1 ; -1
                                  PointX = -6300 ; -6300 ; -6300
                                  PointY = -1725 ; -1725 ; -1140
                                  }                     
                              Line    
                                  {
                                  Source = Cmp ;  2 ;  1 ; 0
                                  Sink = Cmp ;  3 ;  1 ; -1
                                  PointX = -6300 ; -6300 ; -6300
                                  PointY = -1725 ; -1725 ; -1140
                                  }
                              Line
                                  {
                                  Source = Cmp ;  3  ;  1 ; 0
                                  Sink = Prt ;  1 ;  1 ; -1
                                  PointX = -7200 ; -7200 ; -7200
                                  PointY = 900 ; 3525 ; 3525
                                  }                     
                              Line    
                                  {
                                  Source = Cmp ;  2 ;  2 ; 0
                                  Sink = Cmp ;  4 ;  1 ; -1
                                  PointX = -6300 ; -6300 ; -6300
                                  PointY = -1725 ; -1725 ; -1140
                                  }
                              Line
                                  {
                                  Source = Cmp ;  4  ;  1 ; 0
                                  Sink = Prt ;  2 ;  1 ; -1
                                  PointX = -5200 ; -5200 ; -5200
                                  PointY = 900 ; 3525 ; 3525
                                  }                                               
                }
            }
              Coupled
            {
            Type = Coordinator
            Name = lar_felix_1
            Ports = 0; 2
            Description = Coupled DEVS model
            Graphic
                {
                Position = -7595 ; -12375
                Dimension = 390; 1050
                Direction = Down
                Color = 15
                Icon = %datanetworks%server.jpg
                Window = 5000; 5000; 5000; 5000
                }
            Parameters
                {
                }
            System
                {
    Atomic
                        {
                        Name = GeneratorApplication
                        Ports = 0 ; 1
                        Path = PhaseI/FelixServer.h
                        Description = Generates jobs. Distribution for the rate and jobSize are retrieved from the Flows assigned to this server
                        Graphic
                            {
                            Position = -7740 ; -4365
                            Dimension = 630 ; 645
                            Direction = Down
                            Color = 15
                            Icon = %datanetworks%generator.png
                            }
                        Parameters
                            {
                            }
                        }
    Atomic
                        {
                        Name = Routing
                        Ports = 1 ; 2
                        Path = PhaseI/Router.h
                        Description = InN: Incomming packets\nInN: Outgoing packets \n This model routes incoming packets to outports. The decision is based on the global table GlobalFlowBasedRoutingTable(flowId, routerName). If there are more than one possible outport, the model uses a routingPolicy (currently hardcoded to Round-Robin) to decide.
                        Graphic
                            {
                            Position = -7740 ; -2115
                            Dimension = 615 ; 1785
                            Direction = Down
                            Color = 15
                            Icon = %datanetworks%router.jpg
                            }
                        Parameters
                            {
                            }
                        }
                        Outport
                        {
                        Name = Outport0
                        CoupledPort = 1
                        Description = 
                        Graphic
                            {
                            Position = -7000 ; 3600
                            Dimension = 555
                            Direction = Right
                            }
                        }
                        Coupled
                            {
                            Type = Coordinator
                            Name = egressPort0
                            Ports = 1; 1
                            Description = Coupled DEVS model
                            Graphic
                                {
                                Position = -7700; -120
                                Dimension = 990; 840
                                Direction = Down
                                Color = 15
                                Icon = %datanetworks%egressport.jpg
                                Window = 5000; 5000; 5000; 5000
                                }
                            Parameters
                                {
                                }
                            System
                                {
                                Inport
                                    {
                                    Name = Inport0
                                    CoupledPort = 1
                                    Description = 
                                    Graphic
                                        {
                                        Position = -4725 ; -3525
                                        Dimension = 450
                                        Direction = Right
                                        }
                                    }
                                Outport
                                    {
                                    Name = Outport0
                                    CoupledPort = 1
                                    Description = 
                                    Graphic
                                        {
                                        Position = -930 ; 1575
                                        Dimension = 525
                                        Direction = Right
                                        }
                                    }
                                Atomic
                                    {
                                    Name = portQueue
                                    Ports = 2 ; 2
                                    Path = PhaseI/NetworkQueue.h
                                    Description = In0 Incomming packets to queue\nIn1 Incoming signal to request dequeue\nOut0 Outgoing dequeued packets\nOut1 Outgoing queue lenght information\n\nQueues incoming packets and enqueues them as required by a\nexternal entity. FIFO Policy (FirstInFirstOut). Provides information\nits internal state.
                                    Graphic
                                        {
                                        Position = -3855 ; -2355
                                        Dimension = 675 ; 675
                                        Direction = Down
                                        Color = 15
                                        Icon = %datanetworks%queue.png
                                        }
                                    Parameters
                                        {
                                        MaxCapacity = Str; lar_felix_1.egressPort.queueCapacity ; Queue Capacity in Bytes. (Use -1 for INF capacity)
                                        ForcedPeriod = Str; -1 ; Force minimum period to transition. Use -1 for INF
                                        }
                                    }
                                Atomic
                                    {
                                    Name = Link
                                    Ports = 1 ; 1
                                    Path = PhaseI/Link.h
                                    Description = Vector to scalar signal
                                    Graphic
                                        {
                                        Position = -3990 ; -540
                                        Dimension = 630 ; 630
                                        Direction = Down
                                        Color = 15
                                        Icon = %vectors%vec2scalar.svg
                                        }
                                    Parameters
                                        {
                                        link.capacity = Str; lar_felix_1.egressPort0.link.capacity ; Signal Index
                                        link.delay = Str; lar_felix_1.egressPort0.link.delay ; 
                                        }
                                    }
                                Point
                                    {
                                    ConectedLines = 3 ; 4 ; 5
                                    ConectedExtrems = Org ; Org ; Org
                                    Position = -3705 ; 765
                                    }
                                Line
                                    {
                                    Source = Prt ;  1 ;  1 ; 0
                                    Sink = Cmp ;  1 ;  1 ; -1
                                    PointX = -4125 ; -3675 ; -3675
                                    PointY = -3525 ; -3525 ; -2490
                                    }
                                Line
                                    {
                                    Source = Cmp ;  1 ;  1 ; 0
                                    Sink = Cmp ;  2 ;  1 ; -1
                                    PointX = -3675 ; -3675 ; -3675
                                    PointY = -1575 ; -1575 ; -690
                                    }
                                Line
                                    {
                                    Source = Cmp ;  2 ;  1 ; 0
                                    Sink = Pnt ;  1 ; -1 ; 0
                                    PointX = -3675 ; -3705 ; -3705
                                    PointY = 225 ; 225 ; 765
                                    }
                                Line
                                    {
                                    Source = Cmp ;  1 ;  2 ; -1
                                    Sink = Pnt ;  1 ; -1 ; 0
                                    PointX = -3375 ; -3375 ; -2775 ; -2775 ; -3705
                                    PointY = -2490 ; -2775 ; -2775 ; 765 ; 765
                                    }
                                Line
                                    {
                                    Source = Pnt ;  1 ; -1 ; 0
                                    Sink = Prt ;  2 ;  1 ; -1
                                    PointX = -3705 ; -3705 ; -1065
                                    PointY = 765 ; 1575 ; 1575
                                    }
                                }
                            }
                        Outport
                        {
                        Name = Outport1
                        CoupledPort = 1
                        Description = 
                        Graphic
                            {
                            Position = -5000 ; 3600
                            Dimension = 555
                            Direction = Right
                            }
                        }
                        Coupled
                            {
                            Type = Coordinator
                            Name = egressPort1
                            Ports = 1; 1
                            Description = Coupled DEVS model
                            Graphic
                                {
                                Position = -5700; -120
                                Dimension = 990; 840
                                Direction = Down
                                Color = 15
                                Icon = %datanetworks%egressport.jpg
                                Window = 5000; 5000; 5000; 5000
                                }
                            Parameters
                                {
                                }
                            System
                                {
                                Inport
                                    {
                                    Name = Inport0
                                    CoupledPort = 1
                                    Description = 
                                    Graphic
                                        {
                                        Position = -4725 ; -3525
                                        Dimension = 450
                                        Direction = Right
                                        }
                                    }
                                Outport
                                    {
                                    Name = Outport0
                                    CoupledPort = 1
                                    Description = 
                                    Graphic
                                        {
                                        Position = -930 ; 1575
                                        Dimension = 525
                                        Direction = Right
                                        }
                                    }
                                Atomic
                                    {
                                    Name = portQueue
                                    Ports = 2 ; 2
                                    Path = PhaseI/NetworkQueue.h
                                    Description = In0 Incomming packets to queue\nIn1 Incoming signal to request dequeue\nOut0 Outgoing dequeued packets\nOut1 Outgoing queue lenght information\n\nQueues incoming packets and enqueues them as required by a\nexternal entity. FIFO Policy (FirstInFirstOut). Provides information\nits internal state.
                                    Graphic
                                        {
                                        Position = -3855 ; -2355
                                        Dimension = 675 ; 675
                                        Direction = Down
                                        Color = 15
                                        Icon = %datanetworks%queue.png
                                        }
                                    Parameters
                                        {
                                        MaxCapacity = Str; lar_felix_1.egressPort.queueCapacity ; Queue Capacity in Bytes. (Use -1 for INF capacity)
                                        ForcedPeriod = Str; -1 ; Force minimum period to transition. Use -1 for INF
                                        }
                                    }
                                Atomic
                                    {
                                    Name = Link
                                    Ports = 1 ; 1
                                    Path = PhaseI/Link.h
                                    Description = Vector to scalar signal
                                    Graphic
                                        {
                                        Position = -3990 ; -540
                                        Dimension = 630 ; 630
                                        Direction = Down
                                        Color = 15
                                        Icon = %vectors%vec2scalar.svg
                                        }
                                    Parameters
                                        {
                                        link.capacity = Str; lar_felix_1.egressPort1.link.capacity ; Signal Index
                                        link.delay = Str; lar_felix_1.egressPort1.link.delay ; 
                                        }
                                    }
                                Point
                                    {
                                    ConectedLines = 3 ; 4 ; 5
                                    ConectedExtrems = Org ; Org ; Org
                                    Position = -3705 ; 765
                                    }
                                Line
                                    {
                                    Source = Prt ;  1 ;  1 ; 0
                                    Sink = Cmp ;  1 ;  1 ; -1
                                    PointX = -4125 ; -3675 ; -3675
                                    PointY = -3525 ; -3525 ; -2490
                                    }
                                Line
                                    {
                                    Source = Cmp ;  1 ;  1 ; 0
                                    Sink = Cmp ;  2 ;  1 ; -1
                                    PointX = -3675 ; -3675 ; -3675
                                    PointY = -1575 ; -1575 ; -690
                                    }
                                Line
                                    {
                                    Source = Cmp ;  2 ;  1 ; 0
                                    Sink = Pnt ;  1 ; -1 ; 0
                                    PointX = -3675 ; -3705 ; -3705
                                    PointY = 225 ; 225 ; 765
                                    }
                                Line
                                    {
                                    Source = Cmp ;  1 ;  2 ; -1
                                    Sink = Pnt ;  1 ; -1 ; 0
                                    PointX = -3375 ; -3375 ; -2775 ; -2775 ; -3705
                                    PointY = -2490 ; -2775 ; -2775 ; 765 ; 765
                                    }
                                Line
                                    {
                                    Source = Pnt ;  1 ; -1 ; 0
                                    Sink = Prt ;  2 ;  1 ; -1
                                    PointX = -3705 ; -3705 ; -1065
                                    PointY = 765 ; 1575 ; 1575
                                    }
                                }
                            }  
                              Line
                                  {
                                  Source = Cmp ;  1 ;  1 ; 0
                                  Sink = Cmp ;  2 ;  1 ; -1
                                  PointX = -6300 ; -6300 ; -6300
                                  PointY = -1725 ; -1725 ; -1140
                                  }                     
                              Line    
                                  {
                                  Source = Cmp ;  2 ;  1 ; 0
                                  Sink = Cmp ;  3 ;  1 ; -1
                                  PointX = -6300 ; -6300 ; -6300
                                  PointY = -1725 ; -1725 ; -1140
                                  }
                              Line
                                  {
                                  Source = Cmp ;  3  ;  1 ; 0
                                  Sink = Prt ;  1 ;  1 ; -1
                                  PointX = -7200 ; -7200 ; -7200
                                  PointY = 900 ; 3525 ; 3525
                                  }                     
                              Line    
                                  {
                                  Source = Cmp ;  2 ;  2 ; 0
                                  Sink = Cmp ;  4 ;  1 ; -1
                                  PointX = -6300 ; -6300 ; -6300
                                  PointY = -1725 ; -1725 ; -1140
                                  }
                              Line
                                  {
                                  Source = Cmp ;  4  ;  1 ; 0
                                  Sink = Prt ;  2 ;  1 ; -1
                                  PointX = -5200 ; -5200 ; -5200
                                  PointY = 900 ; 3525 ; 3525
                                  }                                               
                }
            }
              Coupled
            {
            Type = Coordinator
            Name = lar_swrod_0
            Ports = 2; 0
            Description = Coupled DEVS model
            Graphic
                {
                Position = -2795 ; -12375
                Dimension = 390; 1050
                Direction = Down
                Color = 15
                Icon = %datanetworks%server.jpg
                Window = 5000; 5000; 5000; 5000
                }
            Parameters
                {
                }
            System
                {                         
      Atomic
      {
        Name = ReceivingApplication
        Ports = 2 ; 0
        Path = PhaseI/Packetsink.h
        Description = Generates jobs. Distribution for the rate and jobSize are retrieved from the Flows assigned to this server
        Graphic
            {
            Position = -8490 ; 45
            Dimension = 630 ; 675
            Direction = Down
            Color = 15
            Icon = %datanetworks%generator.png
            }
        Parameters
            {
            }
      }
          Inport
          {
            Name = Inport0
            CoupledPort = 1
            Description = 
            Graphic
                {
                Position = -9330 ; -3250
                Dimension = 510
                Direction = Right
                }
          }
          Line
          {
            Source = Prt ;  1 ;  1 ; 0
            Sink = Cmp ;  1 ;  1 ; -1
            PointX = -8700 ; -8325 ; -8325
            PointY = -3250 ; -3250 ; -90
          }
          Inport
          {
            Name = Inport1
            CoupledPort = 1
            Description = 
            Graphic
                {
                Position = -9330 ; -2250
                Dimension = 510
                Direction = Right
                }
          }
          Line
          {
            Source = Prt ;  2 ;  1 ; 0
            Sink = Cmp ;  1 ;  2 ; -1
            PointX = -8700 ; -8025 ; -8025
            PointY = -2250 ; -2250 ; -90
          }                                                
                }
            }
              Coupled
            {
            Type = Coordinator
            Name = lar_swrod_1
            Ports = 2; 0
            Description = Coupled DEVS model
            Graphic
                {
                Position = 2005 ; -12375
                Dimension = 390; 1050
                Direction = Down
                Color = 15
                Icon = %datanetworks%server.jpg
                Window = 5000; 5000; 5000; 5000
                }
            Parameters
                {
                }
            System
                {                         
      Atomic
      {
        Name = ReceivingApplication
        Ports = 2 ; 0
        Path = PhaseI/Packetsink.h
        Description = Generates jobs. Distribution for the rate and jobSize are retrieved from the Flows assigned to this server
        Graphic
            {
            Position = -8490 ; 45
            Dimension = 630 ; 675
            Direction = Down
            Color = 15
            Icon = %datanetworks%generator.png
            }
        Parameters
            {
            }
      }
          Inport
          {
            Name = Inport0
            CoupledPort = 1
            Description = 
            Graphic
                {
                Position = -9330 ; -3250
                Dimension = 510
                Direction = Right
                }
          }
          Line
          {
            Source = Prt ;  1 ;  1 ; 0
            Sink = Cmp ;  1 ;  1 ; -1
            PointX = -8700 ; -8325 ; -8325
            PointY = -3250 ; -3250 ; -90
          }
          Inport
          {
            Name = Inport1
            CoupledPort = 1
            Description = 
            Graphic
                {
                Position = -9330 ; -2250
                Dimension = 510
                Direction = Right
                }
          }
          Line
          {
            Source = Prt ;  2 ;  1 ; 0
            Sink = Cmp ;  1 ;  2 ; -1
            PointX = -8700 ; -8025 ; -8025
            PointY = -2250 ; -2250 ; -90
          }                                                
                }
            }
      Line
                       {
                       Source = Cmp ;  8 ;   1 ; 0
                       Sink = Cmp ;  4 ;  3 ; -1
                       PointX = -9675 ; -9675 ; -9675
                       PointY = -10350 ; -10350 ; -9990
                       }
                       Line
                       {
                       Source = Cmp ;  8 ;   2 ; 0
                       Sink = Cmp ;  5 ;  3 ; -1
                       PointX = -9675 ; -9675 ; -9675
                       PointY = -10350 ; -10350 ; -9990
                       }
                       Line
                       {
                       Source = Cmp ;  9 ;   1 ; 0
                       Sink = Cmp ;  4 ;  4 ; -1
                       PointX = -9675 ; -9675 ; -9675
                       PointY = -10350 ; -10350 ; -9990
                       }
                       Line
                       {
                       Source = Cmp ;  9 ;   2 ; 0
                       Sink = Cmp ;  5 ;  4 ; -1
                       PointX = -9675 ; -9675 ; -9675
                       PointY = -10350 ; -10350 ; -9990
                       }
                       Line
                       {
                       Source = Cmp ;  4 ;   3 ; 0
                       Sink = Cmp ;  10 ;  1 ; -1
                       PointX = -9675 ; -9675 ; -9675
                       PointY = -10350 ; -10350 ; -9990
                       }
                       Line
                       {
                       Source = Cmp ;  5 ;   3 ; 0
                       Sink = Cmp ;  10 ;  2 ; -1
                       PointX = -9675 ; -9675 ; -9675
                       PointY = -10350 ; -10350 ; -9990
                       }
                       Line
                       {
                       Source = Cmp ;  4 ;   4 ; 0
                       Sink = Cmp ;  11 ;  1 ; -1
                       PointX = -9675 ; -9675 ; -9675
                       PointY = -10350 ; -10350 ; -9990
                       }
                       Line
                       {
                       Source = Cmp ;  5 ;   4 ; 0
                       Sink = Cmp ;  11 ;  2 ; -1
                       PointX = -9675 ; -9675 ; -9675
                       PointY = -10350 ; -10350 ; -9990
                       }
                       Line
                       {
                       Source = Cmp ;  4 ;   1 ; 0
                       Sink = Cmp ;  6 ;  1 ; -1
                       PointX = -9675 ; -9675 ; -9675
                       PointY = -10350 ; -10350 ; -9990
                       }
                       Line
                       {
                       Source = Cmp ;  6 ;   1 ; 0
                       Sink = Cmp ;  4 ;  1 ; -1
                       PointX = -9675 ; -9675 ; -9675
                       PointY = -10350 ; -10350 ; -9990
                       }
                       Line
                       {
                       Source = Cmp ;  4 ;   2 ; 0
                       Sink = Cmp ;  7 ;  1 ; -1
                       PointX = -9675 ; -9675 ; -9675
                       PointY = -10350 ; -10350 ; -9990
                       }
                       Line
                       {
                       Source = Cmp ;  7 ;   1 ; 0
                       Sink = Cmp ;  4 ;  2 ; -1
                       PointX = -9675 ; -9675 ; -9675
                       PointY = -10350 ; -10350 ; -9990
                       }
                       Line
                       {
                       Source = Cmp ;  5 ;   1 ; 0
                       Sink = Cmp ;  6 ;  2 ; -1
                       PointX = -9675 ; -9675 ; -9675
                       PointY = -10350 ; -10350 ; -9990
                       }
                       Line
                       {
                       Source = Cmp ;  6 ;   2 ; 0
                       Sink = Cmp ;  5 ;  1 ; -1
                       PointX = -9675 ; -9675 ; -9675
                       PointY = -10350 ; -10350 ; -9990
                       }
                       Line
                       {
                       Source = Cmp ;  5 ;   2 ; 0
                       Sink = Cmp ;  7 ;  2 ; -1
                       PointX = -9675 ; -9675 ; -9675
                       PointY = -10350 ; -10350 ; -9990
                       }
                       Line
                       {
                       Source = Cmp ;  7 ;   2 ; 0
                       Sink = Cmp ;  5 ;  2 ; -1
                       PointX = -9675 ; -9675 ; -9675
                       PointY = -10350 ; -10350 ; -9990
                       }
                       Atomic
                      {
                      Name = FinalizationCommands
                      Ports = 0 ; 0
                      Path = sinks/multipleSimulationCommands.h
                      Description = Executes Scilab commands when using multiple simulation runs (at the end of each simulation, and at the end of ALL simulations).\nThis model should run with LAST priority
                      Graphic
                          {
                          Position = -6270 ; -14220
                          Dimension = 540 ; 540
                          Direction = Right
                          Color = 15
                          Icon = %datanetworks%scilab.bmp
                          }
                      Parameters
                          {
                          initSimulationCommandName = Str; /home/alaurito/Desktop/repos/cern/topologyGenerator/lib/output/Scilab/firstSimulation.sce ; 
                          eachSimulationCommandName = Str; /home/alaurito/Desktop/repos/cern/topologyGenerator/lib/output/Scilab/eachSimulation.sce ; 
                          lastSimulationCommandName = Str; /home/alaurito/Desktop/repos/cern/topologyGenerator/lib/output/Scilab/lastSimulation.sce ; 
                          }
                      }
                  }
          }
